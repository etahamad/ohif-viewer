{"version":3,"file":"2424.bundle.e7e4a799ee905e304c28.js","mappings":"oJAEMA,E,iDAAKC,GACLC,EAAoB,GAAGF,oC,0BCC7B,MAIMG,EAAeC,OAAOC,OAJL,CACrBC,iBAAkB,kC,wNCDpB,MAAMC,EAAYC,EAAAA,KAAW,IACpB,iCAGHC,EAA6BC,GAE/BF,EAAAA,cAACA,EAAAA,SAAc,CAACG,SAAUH,EAAAA,cAAA,WAAK,eAC7BA,EAAAA,cAACD,EAAcG,IAmCrB,EA3B0B,CAIxBV,GAAE,EAOFY,kBAAiBA,EAAC,gBAAEC,EAAe,iBAAEC,KAW5B,CAAC,CAAEC,KAAM,YAAaC,UAVcN,GAEvCF,EAAAA,cAACC,EAA0BQ,EAAA,CACzBJ,gBAAiBA,EACjBC,iBAAkBA,GACdJ,MAOZQ,yBDUa,SAAkCC,GAC/C,MAAM,gBAAEN,EAAe,iBAAEC,GAAqBK,EAK9C,MAAO,CACL,CACEJ,KAAM,YACNZ,eACAiB,yBAR6BC,GA7CDC,EAACD,EAAWR,EAAiBC,KAC7D,MAAMS,EAAaT,EAAiBU,sBAAsB,GAC1D,OAAOH,EAAUI,IAAIC,IACnB,MAAM,SAAEC,EAAQ,eAAEC,GAAmBF,GAC/B,kBAAEG,EAAoB,MAAK,+BAAEC,GAAmCJ,GAChE,aAAEK,EAAY,WAAEC,EAAU,kBAAEC,EAAiB,iBAAEC,EAAgB,YAAEC,GAAgBT,EACjFU,EAAcb,EAAWc,SAASC,UAAU,CAChDZ,WACAa,IAAK,uBACLC,YAAaV,GAAkC,kBAC/CW,WAAY,QA6Bd,MA1BmB,CAEjBd,WACAe,sBAAuBC,EAAAA,GAAMC,OAC7Bf,oBACAE,eACAC,aACAJ,iBACAK,oBACAC,mBACAhC,kBAAiB,EACjBiC,cACAU,iBAAkB,KAClBC,aAAc,KACdV,YAAaA,EACbf,UAAW,CAACK,GACZqB,aAAc,KACdC,qBAAqB,EACrBC,UAAU,EACV9C,eACA+C,eAAgB,EAChBC,aAAc,EACdzB,WACA0B,qBAAqB,EACrBC,MAAOxB,GAAqB,GAAGyB,EAAAA,EAAKC,EAAE,aAAaxB,OAAkBuB,EAAAA,EAAKC,EAAE5B,SASvEL,CAA0BD,EAAWR,EAAiBC,IAUjE,E","sources":["webpack:///../../../extensions/dicom-pdf/src/id.js","webpack:///../../../extensions/dicom-pdf/src/getSopClassHandlerModule.js","webpack:///../../../extensions/dicom-pdf/src/index.tsx"],"sourcesContent":["import packageJson from '../package.json';\n\nconst id = packageJson.name;\nconst SOPClassHandlerId = `${id}.sopClassHandlerModule.dicom-pdf`;\n\nexport { id, SOPClassHandlerId };\n","import { SOPClassHandlerId } from './id';\nimport { utils, Types as OhifTypes } from '@ohif/core';\nimport i18n from '@ohif/i18n';\n\nconst SOP_CLASS_UIDS = {\n  ENCAPSULATED_PDF: '1.2.840.10008.5.1.4.1.1.104.1',\n};\n\nconst sopClassUids = Object.values(SOP_CLASS_UIDS);\n\nconst _getDisplaySetsFromSeries = (instances, servicesManager, extensionManager) => {\n  const dataSource = extensionManager.getActiveDataSource()[0];\n  return instances.map(instance => {\n    const { Modality, SOPInstanceUID } = instance;\n    const { SeriesDescription = 'PDF', MIMETypeOfEncapsulatedDocument } = instance;\n    const { SeriesNumber, SeriesDate, SeriesInstanceUID, StudyInstanceUID, SOPClassUID } = instance;\n    const renderedUrl = dataSource.retrieve.directURL({\n      instance,\n      tag: 'EncapsulatedDocument',\n      defaultType: MIMETypeOfEncapsulatedDocument || 'application/pdf',\n      singlepart: 'pdf',\n    });\n\n    const displaySet = {\n      //plugin: id,\n      Modality,\n      displaySetInstanceUID: utils.guid(),\n      SeriesDescription,\n      SeriesNumber,\n      SeriesDate,\n      SOPInstanceUID,\n      SeriesInstanceUID,\n      StudyInstanceUID,\n      SOPClassHandlerId,\n      SOPClassUID,\n      referencedImages: null,\n      measurements: null,\n      renderedUrl: renderedUrl,\n      instances: [instance],\n      thumbnailSrc: null,\n      isDerivedDisplaySet: true,\n      isLoaded: false,\n      sopClassUids,\n      numImageFrames: 0,\n      numInstances: 1,\n      instance,\n      supportsWindowLevel: true,\n      label: SeriesDescription || `${i18n.t('Series')} ${SeriesNumber} - ${i18n.t(Modality)}`,\n    };\n    return displaySet;\n  });\n};\n\nexport default function getSopClassHandlerModule(params) {\n  const { servicesManager, extensionManager } = params;\n  const getDisplaySetsFromSeries = instances => {\n    return _getDisplaySetsFromSeries(instances, servicesManager, extensionManager);\n  };\n\n  return [\n    {\n      name: 'dicom-pdf',\n      sopClassUids,\n      getDisplaySetsFromSeries,\n    },\n  ];\n}\n","import React from 'react';\nimport getSopClassHandlerModule from './getSopClassHandlerModule';\nimport { id } from './id.js';\n\nconst Component = React.lazy(() => {\n  return import(/* webpackPrefetch: true */ './viewports/OHIFCornerstonePdfViewport');\n});\n\nconst OHIFCornerstonePdfViewport = props => {\n  return (\n    <React.Suspense fallback={<div>Loading...</div>}>\n      <Component {...props} />\n    </React.Suspense>\n  );\n};\n\n/**\n *\n */\nconst dicomPDFExtension = {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id,\n  /**\n   *\n   *\n   * @param {object} [configuration={}]\n   * @param {object|array} [configuration.csToolsConfig] - Passed directly to `initCornerstoneTools`\n   */\n  getViewportModule({ servicesManager, extensionManager }) {\n    const ExtendedOHIFCornerstonePdfViewport = props => {\n      return (\n        <OHIFCornerstonePdfViewport\n          servicesManager={servicesManager}\n          extensionManager={extensionManager}\n          {...props}\n        />\n      );\n    };\n\n    return [{ name: 'dicom-pdf', component: ExtendedOHIFCornerstonePdfViewport }];\n  },\n  getSopClassHandlerModule,\n};\n\nexport default dicomPDFExtension;\n"],"names":["id","packageJson","SOPClassHandlerId","sopClassUids","Object","values","ENCAPSULATED_PDF","Component","React","OHIFCornerstonePdfViewport","props","fallback","getViewportModule","servicesManager","extensionManager","name","component","_extends","getSopClassHandlerModule","params","getDisplaySetsFromSeries","instances","_getDisplaySetsFromSeries","dataSource","getActiveDataSource","map","instance","Modality","SOPInstanceUID","SeriesDescription","MIMETypeOfEncapsulatedDocument","SeriesNumber","SeriesDate","SeriesInstanceUID","StudyInstanceUID","SOPClassUID","renderedUrl","retrieve","directURL","tag","defaultType","singlepart","displaySetInstanceUID","utils","guid","referencedImages","measurements","thumbnailSrc","isDerivedDisplaySet","isLoaded","numImageFrames","numInstances","supportsWindowLevel","label","i18n","t"],"sourceRoot":""}