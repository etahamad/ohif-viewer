{"version":3,"file":"1459.bundle.814ef09fa4c750052444.js","mappings":"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","sources":["webpack:///../../../modes/microscopy/src/id.js","webpack:///../../../modes/microscopy/src/toolbarButtons.ts","webpack:///../../../modes/microscopy/src/index.tsx"],"sourcesContent":["import packageJson from '../package.json';\n\nconst id = packageJson.name;\n\nexport { id };\n","import type { Button } from '@ohif/core/types';\n\nexport const setToolActiveToolbar = {\n  commandName: 'setToolActive',\n  commandOptions: {\n    toolName: 'line',\n  },\n  context: 'MICROSCOPY',\n};\n\nconst toolbarButtons: Button[] = [\n  {\n    id: 'MeasurementTools',\n    uiType: 'ohif.toolButtonList',\n    props: {\n      buttonSection: true,\n    },\n  },\n  {\n    id: 'line',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-length',\n      label: 'Line',\n      tooltip: 'Line',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.microscopyTool',\n    },\n  },\n  {\n    id: 'point',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-point',\n      label: 'Point',\n      tooltip: 'Point Tool',\n      commands: {\n        ...setToolActiveToolbar,\n        commandOptions: { toolName: 'point' },\n      },\n      evaluate: 'evaluate.microscopyTool',\n    },\n  },\n  {\n    id: 'polygon',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-polygon',\n      label: 'Polygon',\n      tooltip: 'Polygon Tool',\n      commands: {\n        ...setToolActiveToolbar,\n        commandOptions: { toolName: 'polygon' },\n      },\n      evaluate: 'evaluate.microscopyTool',\n    },\n  },\n  {\n    id: 'circle',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-circle',\n      label: 'Circle',\n      tooltip: 'Circle Tool',\n      commands: {\n        ...setToolActiveToolbar,\n        commandOptions: { toolName: 'circle' },\n      },\n      evaluate: 'evaluate.microscopyTool',\n    },\n  },\n  {\n    id: 'box',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-rectangle',\n      label: 'Box',\n      tooltip: 'Box Tool',\n      commands: {\n        ...setToolActiveToolbar,\n        commandOptions: { toolName: 'box' },\n      },\n      evaluate: 'evaluate.microscopyTool',\n    },\n  },\n  {\n    id: 'freehandpolygon',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-freehand-polygon',\n      label: 'Freehand Polygon',\n      tooltip: 'Freehand Polygon Tool',\n      commands: {\n        ...setToolActiveToolbar,\n        commandOptions: { toolName: 'freehandpolygon' },\n      },\n      evaluate: 'evaluate.microscopyTool',\n    },\n  },\n  {\n    id: 'freehandline',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-freehand-line',\n      label: 'Freehand Line',\n      tooltip: 'Freehand Line Tool',\n      commands: {\n        ...setToolActiveToolbar,\n        commandOptions: { toolName: 'freehandline' },\n      },\n      evaluate: 'evaluate.microscopyTool',\n    },\n  },\n  {\n    id: 'dragPan',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-move',\n      label: 'Pan',\n      commands: {\n        ...setToolActiveToolbar,\n        commandOptions: { toolName: 'dragPan' },\n      },\n      evaluate: 'evaluate.microscopyTool',\n    },\n  },\n  {\n    id: 'TagBrowser',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'dicom-tag-browser',\n      label: 'Dicom Tag Browser',\n      tooltip: 'Dicom Tag Browser',\n      commands: 'openDICOMTagViewer',\n      evaluate: 'evaluate.action',\n    },\n  },\n];\n\nexport default toolbarButtons;\n","import i18n from 'i18next';\n\nimport { id } from './id';\nimport toolbarButtons from './toolbarButtons';\n\nconst ohif = {\n  layout: '@ohif/extension-default.layoutTemplateModule.viewerLayout',\n  sopClassHandler: '@ohif/extension-default.sopClassHandlerModule.stack',\n  hangingProtocols: '@ohif/extension-default.hangingProtocolModule.default',\n  leftPanel: '@ohif/extension-default.panelModule.seriesList',\n  rightPanel: '@ohif/extension-dicom-microscopy.panelModule.measure',\n};\n\nexport const cornerstone = {\n  viewport: '@ohif/extension-cornerstone.viewportModule.cornerstone',\n};\n\nconst dicomvideo = {\n  sopClassHandler: '@ohif/extension-dicom-video.sopClassHandlerModule.dicom-video',\n  viewport: '@ohif/extension-dicom-video.viewportModule.dicom-video',\n};\n\nconst dicompdf = {\n  sopClassHandler: '@ohif/extension-dicom-pdf.sopClassHandlerModule.dicom-pdf',\n  viewport: '@ohif/extension-dicom-pdf.viewportModule.dicom-pdf',\n};\n\nconst extensionDependencies = {\n  // Can derive the versions at least process.env.from npm_package_version\n  '@ohif/extension-default': '^3.0.0',\n  '@ohif/extension-cornerstone': '^3.0.0',\n  '@ohif/extension-cornerstone-dicom-sr': '^3.0.0',\n  '@ohif/extension-dicom-pdf': '^3.0.1',\n  '@ohif/extension-dicom-video': '^3.0.1',\n  '@ohif/extension-dicom-microscopy': '^3.0.0',\n};\n\nfunction modeFactory({ modeConfiguration }) {\n  return {\n    id,\n    routeName: 'microscopy',\n    displayName: i18n.t('Modes:Microscopy'),\n\n    /**\n     * Lifecycle hooks\n     */\n    onModeEnter: ({ servicesManager }: withAppTypes) => {\n      const { toolbarService } = servicesManager.services;\n\n      toolbarService.register(toolbarButtons);\n      toolbarService.updateSection('primary', ['MeasurementTools', 'dragPan', 'TagBrowser']);\n\n      toolbarService.updateSection('MeasurementTools', [\n        'line',\n        'point',\n        'polygon',\n        'circle',\n        'box',\n        'freehandpolygon',\n        'freehandline',\n      ]);\n    },\n\n    onModeExit: ({ servicesManager }: withAppTypes) => {\n      const { toolbarService, uiDialogService, uiModalService } = servicesManager.services;\n\n      uiDialogService.hideAll();\n      uiModalService.hide();\n      toolbarService.reset();\n    },\n\n    validationTags: {\n      study: [],\n      series: [],\n    },\n\n    isValidMode: ({ modalities }) => {\n      const modalities_list = modalities.split('\\\\');\n\n      return {\n        valid: modalities_list.includes('SM'),\n        description: 'Microscopy mode only supports the SM modality',\n      };\n    },\n\n    routes: [\n      {\n        path: 'microscopy',\n        layoutTemplate: ({ location, servicesManager }) => {\n          return {\n            id: ohif.layout,\n            props: {\n              leftPanels: [ohif.leftPanel],\n              leftPanelResizable: true,\n              leftPanelClosed: true, // we have problem with rendering thumbnails for microscopy images\n              // rightPanelClosed: true, // we do not have the save microscopy measurements yet\n              rightPanels: [ohif.rightPanel],\n              rightPanelResizable: true,\n              viewports: [\n                {\n                  namespace: '@ohif/extension-dicom-microscopy.viewportModule.microscopy-dicom',\n                  displaySetsToDisplay: [\n                    // Share the sop class handler with cornerstone version of it\n                    '@ohif/extension-cornerstone.sopClassHandlerModule.DicomMicroscopySopClassHandler',\n                    '@ohif/extension-dicom-microscopy.sopClassHandlerModule.DicomMicroscopySRSopClassHandler',\n                    '@ohif/extension-dicom-microscopy.sopClassHandlerModule.DicomMicroscopyANNSopClassHandler',\n                  ],\n                },\n                {\n                  namespace: dicomvideo.viewport,\n                  displaySetsToDisplay: [dicomvideo.sopClassHandler],\n                },\n                {\n                  namespace: dicompdf.viewport,\n                  displaySetsToDisplay: [dicompdf.sopClassHandler],\n                },\n              ],\n            },\n          };\n        },\n      },\n    ],\n    extensions: extensionDependencies,\n    hangingProtocol: 'default',\n    sopClassHandlers: [\n      '@ohif/extension-cornerstone.sopClassHandlerModule.DicomMicroscopySopClassHandler',\n      '@ohif/extension-dicom-microscopy.sopClassHandlerModule.DicomMicroscopySRSopClassHandler',\n      '@ohif/extension-dicom-microscopy.sopClassHandlerModule.DicomMicroscopyANNSopClassHandler',\n      dicomvideo.sopClassHandler,\n      dicompdf.sopClassHandler,\n    ],\n    ...modeConfiguration,\n  };\n}\n\nconst mode = {\n  id,\n  modeFactory,\n  extensionDependencies,\n};\n\nexport default mode;\n"],"names":["id","packageJson","setToolActiveToolbar","commandName","commandOptions","toolName","context","uiType","props","buttonSection","icon","label","tooltip","commands","evaluate","ohif","cornerstone","viewport","dicomvideo","dicompdf","extensionDependencies","modeFactory","modeConfiguration","routeName","displayName","i18n","t","onModeEnter","servicesManager","toolbarService","services","register","toolbarButtons","updateSection","onModeExit","uiDialogService","uiModalService","hideAll","hide","reset","validationTags","study","series","isValidMode","modalities","valid","split","includes","description","routes","path","layoutTemplate","location","leftPanels","leftPanelResizable","leftPanelClosed","rightPanels","rightPanelResizable","viewports","namespace","displaySetsToDisplay","extensions","hangingProtocol","sopClassHandlers"],"sourceRoot":""}