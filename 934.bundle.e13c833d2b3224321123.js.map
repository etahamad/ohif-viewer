{"version":3,"file":"934.bundle.e13c833d2b3224321123.js","mappings":"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","sources":["webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/enums/ChangeTypes.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/enums/Events.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/enums/SegmentationRepresentations.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/enums/StrategyCallbacks.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/enums/ToolBindings.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/enums/ToolModes.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/enums/Touch.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/enums/AnnotationStyleStates.js","webpack:///../../../node_modules/@cornerstonejs/tools/dist/esm/enums/WorkerTypes.js","webpack:///../../../extensions/test-extension/src/id.js","webpack:///../../../extensions/test-extension/src/hpTestSwitch.ts","webpack:///../../../extensions/test-extension/src/custom-context-menu/codingValues.ts","webpack:///../../../extensions/test-extension/src/custom-context-menu/contextMenuCodeItem.ts","webpack:///../../../extensions/test-extension/src/custom-context-menu/findingsContextMenu.ts","webpack:///../../../extensions/test-extension/src/custom-attribute/sameAs.ts","webpack:///../../../extensions/test-extension/src/custom-attribute/numberOfDisplaySets.ts","webpack:///../../../extensions/test-extension/src/custom-attribute/maxNumImageFrames.ts","webpack:///../../../extensions/test-extension/src/index.tsx","webpack:///../../../extensions/test-extension/src/getCustomizationModule.ts","webpack:///../../../extensions/test-extension/src/getPanelModule.tsx"],"sourcesContent":["var ChangeTypes;\n(function (ChangeTypes) {\n    ChangeTypes[\"Interaction\"] = \"Interaction\";\n    ChangeTypes[\"HandlesUpdated\"] = \"HandlesUpdated\";\n    ChangeTypes[\"StatsUpdated\"] = \"StatsUpdated\";\n    ChangeTypes[\"InitialSetup\"] = \"InitialSetup\";\n    ChangeTypes[\"Completed\"] = \"Completed\";\n    ChangeTypes[\"InterpolationUpdated\"] = \"InterpolationUpdated\";\n    ChangeTypes[\"History\"] = \"History\";\n    ChangeTypes[\"MetadataReferenceModified\"] = \"MetadataReferenceModified\";\n    ChangeTypes[\"LabelChange\"] = \"LabelChange\";\n})(ChangeTypes || (ChangeTypes = {}));\nexport default ChangeTypes;\n","var Events;\n(function (Events) {\n    Events[\"TOOL_ACTIVATED\"] = \"CORNERSTONE_TOOLS_TOOL_ACTIVATED\";\n    Events[\"TOOLGROUP_VIEWPORT_ADDED\"] = \"CORNERSTONE_TOOLS_TOOLGROUP_VIEWPORT_ADDED\";\n    Events[\"TOOLGROUP_VIEWPORT_REMOVED\"] = \"CORNERSTONE_TOOLS_TOOLGROUP_VIEWPORT_REMOVED\";\n    Events[\"TOOL_MODE_CHANGED\"] = \"CORNERSTONE_TOOLS_TOOL_MODE_CHANGED\";\n    Events[\"CROSSHAIR_TOOL_CENTER_CHANGED\"] = \"CORNERSTONE_TOOLS_CROSSHAIR_TOOL_CENTER_CHANGED\";\n    Events[\"VOLUMECROPPINGCONTROL_TOOL_CHANGED\"] = \"CORNERSTONE_TOOLS_VOLUMECROPPINGCONTROL_TOOL_CHANGED\";\n    Events[\"VOLUMECROPPING_TOOL_CHANGED\"] = \"CORNERSTONE_TOOLS_VOLUMECROPPING_TOOL_CHANGED\";\n    Events[\"ANNOTATION_ADDED\"] = \"CORNERSTONE_TOOLS_ANNOTATION_ADDED\";\n    Events[\"ANNOTATION_COMPLETED\"] = \"CORNERSTONE_TOOLS_ANNOTATION_COMPLETED\";\n    Events[\"ANNOTATION_MODIFIED\"] = \"CORNERSTONE_TOOLS_ANNOTATION_MODIFIED\";\n    Events[\"ANNOTATION_REMOVED\"] = \"CORNERSTONE_TOOLS_ANNOTATION_REMOVED\";\n    Events[\"ANNOTATION_SELECTION_CHANGE\"] = \"CORNERSTONE_TOOLS_ANNOTATION_SELECTION_CHANGE\";\n    Events[\"ANNOTATION_LOCK_CHANGE\"] = \"CORNERSTONE_TOOLS_ANNOTATION_LOCK_CHANGE\";\n    Events[\"ANNOTATION_VISIBILITY_CHANGE\"] = \"CORNERSTONE_TOOLS_ANNOTATION_VISIBILITY_CHANGE\";\n    Events[\"ANNOTATION_RENDERED\"] = \"CORNERSTONE_TOOLS_ANNOTATION_RENDERED\";\n    Events[\"ANNOTATION_CUT_MERGE_PROCESS_COMPLETED\"] = \"CORNERSTONE_TOOLS_ANNOTATION_CUT_MERGE_PROCESS_COMPLETED\";\n    Events[\"ANNOTATION_INTERPOLATION_PROCESS_COMPLETED\"] = \"CORNERSTONE_TOOLS_ANNOTATION_INTERPOLATION_PROCESS_COMPLETED\";\n    Events[\"INTERPOLATED_ANNOTATIONS_REMOVED\"] = \"CORNERSTONE_TOOLS_INTERPOLATED_ANNOTATIONS_REMOVED\";\n    Events[\"SEGMENTATION_MODIFIED\"] = \"CORNERSTONE_TOOLS_SEGMENTATION_MODIFIED\";\n    Events[\"SEGMENTATION_RENDERED\"] = \"CORNERSTONE_TOOLS_SEGMENTATION_RENDERED\";\n    Events[\"SEGMENTATION_REPRESENTATION_ADDED\"] = \"CORNERSTONE_TOOLS_SEGMENTATION_REPRESENTATION_ADDED\";\n    Events[\"SEGMENTATION_ADDED\"] = \"CORNERSTONE_TOOLS_SEGMENTATION_ADDED\";\n    Events[\"SEGMENTATION_REPRESENTATION_MODIFIED\"] = \"CORNERSTONE_TOOLS_SEGMENTATION_REPRESENTATION_MODIFIED\";\n    Events[\"SEGMENTATION_REMOVED\"] = \"CORNERSTONE_TOOLS_SEGMENTATION_REMOVED\";\n    Events[\"SEGMENTATION_REPRESENTATION_REMOVED\"] = \"CORNERSTONE_TOOLS_SEGMENTATION_REPRESENTATION_REMOVED\";\n    Events[\"SEGMENTATION_DATA_MODIFIED\"] = \"CORNERSTONE_TOOLS_SEGMENTATION_DATA_MODIFIED\";\n    Events[\"HISTORY_UNDO\"] = \"CORNERSTONE_TOOLS_HISTORY_UNDO\";\n    Events[\"HISTORY_REDO\"] = \"CORNERSTONE_TOOLS_HISTORY_REDO\";\n    Events[\"KEY_DOWN\"] = \"CORNERSTONE_TOOLS_KEY_DOWN\";\n    Events[\"KEY_UP\"] = \"CORNERSTONE_TOOLS_KEY_UP\";\n    Events[\"MOUSE_DOWN\"] = \"CORNERSTONE_TOOLS_MOUSE_DOWN\";\n    Events[\"MOUSE_UP\"] = \"CORNERSTONE_TOOLS_MOUSE_UP\";\n    Events[\"MOUSE_DOWN_ACTIVATE\"] = \"CORNERSTONE_TOOLS_MOUSE_DOWN_ACTIVATE\";\n    Events[\"MOUSE_DRAG\"] = \"CORNERSTONE_TOOLS_MOUSE_DRAG\";\n    Events[\"MOUSE_MOVE\"] = \"CORNERSTONE_TOOLS_MOUSE_MOVE\";\n    Events[\"MOUSE_CLICK\"] = \"CORNERSTONE_TOOLS_MOUSE_CLICK\";\n    Events[\"MOUSE_DOUBLE_CLICK\"] = \"CORNERSTONE_TOOLS_MOUSE_DOUBLE_CLICK\";\n    Events[\"MOUSE_WHEEL\"] = \"CORNERSTONE_TOOLS_MOUSE_WHEEL\";\n    Events[\"TOUCH_START\"] = \"CORNERSTONE_TOOLS_TOUCH_START\";\n    Events[\"TOUCH_START_ACTIVATE\"] = \"CORNERSTONE_TOOLS_TOUCH_START_ACTIVATE\";\n    Events[\"TOUCH_PRESS\"] = \"CORNERSTONE_TOOLS_TOUCH_PRESS\";\n    Events[\"TOUCH_DRAG\"] = \"CORNERSTONE_TOOLS_TOUCH_DRAG\";\n    Events[\"TOUCH_END\"] = \"CORNERSTONE_TOOLS_TOUCH_END\";\n    Events[\"TOUCH_TAP\"] = \"CORNERSTONE_TOOLS_TAP\";\n    Events[\"TOUCH_SWIPE\"] = \"CORNERSTONE_TOOLS_SWIPE\";\n})(Events || (Events = {}));\nexport default Events;\n","var SegmentationRepresentations;\n(function (SegmentationRepresentations) {\n    SegmentationRepresentations[\"Labelmap\"] = \"Labelmap\";\n    SegmentationRepresentations[\"Contour\"] = \"Contour\";\n    SegmentationRepresentations[\"Surface\"] = \"Surface\";\n})(SegmentationRepresentations || (SegmentationRepresentations = {}));\nexport default SegmentationRepresentations;\n","var StrategyCallbacks;\n(function (StrategyCallbacks) {\n    StrategyCallbacks[\"OnInteractionStart\"] = \"onInteractionStart\";\n    StrategyCallbacks[\"OnInteractionEnd\"] = \"onInteractionEnd\";\n    StrategyCallbacks[\"Preview\"] = \"preview\";\n    StrategyCallbacks[\"RejectPreview\"] = \"rejectPreview\";\n    StrategyCallbacks[\"AcceptPreview\"] = \"acceptPreview\";\n    StrategyCallbacks[\"Fill\"] = \"fill\";\n    StrategyCallbacks[\"Interpolate\"] = \"interpolate\";\n    StrategyCallbacks[\"StrategyFunction\"] = \"strategyFunction\";\n    StrategyCallbacks[\"CreateIsInThreshold\"] = \"createIsInThreshold\";\n    StrategyCallbacks[\"Initialize\"] = \"initialize\";\n    StrategyCallbacks[\"INTERNAL_setValue\"] = \"setValue\";\n    StrategyCallbacks[\"AddPreview\"] = \"addPreview\";\n    StrategyCallbacks[\"ComputeInnerCircleRadius\"] = \"computeInnerCircleRadius\";\n    StrategyCallbacks[\"GetStatistics\"] = \"getStatistics\";\n    StrategyCallbacks[\"EnsureImageVolumeFor3DManipulation\"] = \"ensureImageVolumeFor3DManipulation\";\n    StrategyCallbacks[\"EnsureSegmentationVolumeFor3DManipulation\"] = \"ensureSegmentationVolumeFor3DManipulation\";\n})(StrategyCallbacks || (StrategyCallbacks = {}));\nexport default StrategyCallbacks;\n","var MouseBindings;\n(function (MouseBindings) {\n    MouseBindings[MouseBindings[\"Primary\"] = 1] = \"Primary\";\n    MouseBindings[MouseBindings[\"Secondary\"] = 2] = \"Secondary\";\n    MouseBindings[MouseBindings[\"Primary_And_Secondary\"] = 3] = \"Primary_And_Secondary\";\n    MouseBindings[MouseBindings[\"Auxiliary\"] = 4] = \"Auxiliary\";\n    MouseBindings[MouseBindings[\"Primary_And_Auxiliary\"] = 5] = \"Primary_And_Auxiliary\";\n    MouseBindings[MouseBindings[\"Secondary_And_Auxiliary\"] = 6] = \"Secondary_And_Auxiliary\";\n    MouseBindings[MouseBindings[\"Primary_And_Secondary_And_Auxiliary\"] = 7] = \"Primary_And_Secondary_And_Auxiliary\";\n    MouseBindings[MouseBindings[\"Fourth_Button\"] = 8] = \"Fourth_Button\";\n    MouseBindings[MouseBindings[\"Fifth_Button\"] = 16] = \"Fifth_Button\";\n    MouseBindings[MouseBindings[\"Wheel\"] = 524288] = \"Wheel\";\n    MouseBindings[MouseBindings[\"Wheel_Primary\"] = 524289] = \"Wheel_Primary\";\n})(MouseBindings || (MouseBindings = {}));\nvar KeyboardBindings;\n(function (KeyboardBindings) {\n    KeyboardBindings[KeyboardBindings[\"Shift\"] = 16] = \"Shift\";\n    KeyboardBindings[KeyboardBindings[\"Ctrl\"] = 17] = \"Ctrl\";\n    KeyboardBindings[KeyboardBindings[\"Alt\"] = 18] = \"Alt\";\n    KeyboardBindings[KeyboardBindings[\"Meta\"] = 91] = \"Meta\";\n    KeyboardBindings[KeyboardBindings[\"ShiftCtrl\"] = 1617] = \"ShiftCtrl\";\n    KeyboardBindings[KeyboardBindings[\"ShiftAlt\"] = 1618] = \"ShiftAlt\";\n    KeyboardBindings[KeyboardBindings[\"ShiftMeta\"] = 1691] = \"ShiftMeta\";\n    KeyboardBindings[KeyboardBindings[\"CtrlAlt\"] = 1718] = \"CtrlAlt\";\n    KeyboardBindings[KeyboardBindings[\"CtrlMeta\"] = 1791] = \"CtrlMeta\";\n    KeyboardBindings[KeyboardBindings[\"AltMeta\"] = 1891] = \"AltMeta\";\n})(KeyboardBindings || (KeyboardBindings = {}));\nexport { MouseBindings, KeyboardBindings };\n","var ToolModes;\n(function (ToolModes) {\n    ToolModes[\"Active\"] = \"Active\";\n    ToolModes[\"Passive\"] = \"Passive\";\n    ToolModes[\"Enabled\"] = \"Enabled\";\n    ToolModes[\"Disabled\"] = \"Disabled\";\n})(ToolModes || (ToolModes = {}));\nexport default ToolModes;\n","var Swipe;\n(function (Swipe) {\n    Swipe[\"UP\"] = \"UP\";\n    Swipe[\"DOWN\"] = \"DOWN\";\n    Swipe[\"LEFT\"] = \"LEFT\";\n    Swipe[\"RIGHT\"] = \"RIGHT\";\n})(Swipe || (Swipe = {}));\nexport { Swipe };\n","var AnnotationStyleStates;\n(function (AnnotationStyleStates) {\n    AnnotationStyleStates[\"Default\"] = \"\";\n    AnnotationStyleStates[\"Highlighted\"] = \"Highlighted\";\n    AnnotationStyleStates[\"Selected\"] = \"Selected\";\n    AnnotationStyleStates[\"Locked\"] = \"Locked\";\n    AnnotationStyleStates[\"AutoGenerated\"] = \"AutoGenerated\";\n})(AnnotationStyleStates || (AnnotationStyleStates = {}));\nexport default AnnotationStyleStates;\n","var ChangeTypes;\n(function (ChangeTypes) {\n    ChangeTypes[\"POLYSEG_CONTOUR_TO_LABELMAP\"] = \"Converting Contour to Labelmap\";\n    ChangeTypes[\"POLYSEG_SURFACE_TO_LABELMAP\"] = \"Converting Surfaces to Labelmap\";\n    ChangeTypes[\"POLYSEG_CONTOUR_TO_SURFACE\"] = \"Converting Contour to Surface\";\n    ChangeTypes[\"POLYSEG_LABELMAP_TO_SURFACE\"] = \"Converting Labelmap to Surface\";\n    ChangeTypes[\"SURFACE_CLIPPING\"] = \"Clipping Surfaces\";\n    ChangeTypes[\"COMPUTE_STATISTICS\"] = \"Computing Statistics\";\n    ChangeTypes[\"INTERPOLATE_LABELMAP\"] = \"Interpolating Labelmap\";\n    ChangeTypes[\"COMPUTE_LARGEST_BIDIRECTIONAL\"] = \"Computing Largest Bidirectional\";\n    ChangeTypes[\"GENERATE_CONTOUR_SETS\"] = \"Generating Contour Sets\";\n})(ChangeTypes || (ChangeTypes = {}));\nexport default ChangeTypes;\n","import packageJson from '../package.json';\n\nconst id = packageJson.name;\n\nexport { id };\n","import { Types } from '@ohif/core';\n\nconst viewport0a = {\n  viewportOptions: {\n    viewportId: 'viewportA',\n    toolGroupId: 'default',\n    allowUnmatchedView: true,\n  },\n  displaySets: [\n    {\n      id: 'defaultDisplaySetId',\n    },\n  ],\n};\n\nconst viewport1b = {\n  viewportOptions: {\n    viewportId: 'viewportB',\n    toolGroupId: 'default',\n    allowUnmatchedView: true,\n  },\n  displaySets: [\n    {\n      matchedDisplaySetsIndex: 1,\n      id: 'defaultDisplaySetId',\n    },\n  ],\n};\n\nconst viewport2c = {\n  viewportOptions: {\n    viewportId: 'viewportC',\n    toolGroupId: 'default',\n    allowUnmatchedView: true,\n  },\n  displaySets: [\n    {\n      matchedDisplaySetsIndex: 2,\n      id: 'defaultDisplaySetId',\n    },\n  ],\n};\n\nconst viewport3d = {\n  viewportOptions: {\n    viewportId: 'viewportD',\n    toolGroupId: 'default',\n    allowUnmatchedView: true,\n  },\n  displaySets: [\n    {\n      matchedDisplaySetsIndex: 3,\n      id: 'defaultDisplaySetId',\n    },\n  ],\n};\n\nconst viewport4e = {\n  viewportOptions: {\n    viewportId: 'viewportE',\n    toolGroupId: 'default',\n    allowUnmatchedView: true,\n  },\n  displaySets: [\n    {\n      matchedDisplaySetsIndex: 4,\n      id: 'defaultDisplaySetId',\n    },\n  ],\n};\n\nconst viewport5f = {\n  viewportOptions: {\n    viewportId: 'viewportF',\n    toolGroupId: 'default',\n    allowUnmatchedView: true,\n  },\n  displaySets: [\n    {\n      matchedDisplaySetsIndex: 5,\n      id: 'defaultDisplaySetId',\n    },\n  ],\n};\n\nconst viewport3a = {\n  viewportOptions: {\n    viewportId: 'viewportA',\n    toolGroupId: 'default',\n    allowUnmatchedView: true,\n  },\n  displaySets: [\n    {\n      matchedDisplaySetsIndex: 3,\n      id: 'defaultDisplaySetId',\n    },\n  ],\n};\n\nconst viewport2b = {\n  viewportOptions: {\n    viewportId: 'viewportB',\n    toolGroupId: 'default',\n    allowUnmatchedView: true,\n  },\n  displaySets: [\n    {\n      matchedDisplaySetsIndex: 2,\n      id: 'defaultDisplaySetId',\n    },\n  ],\n};\n\nconst viewport1c = {\n  viewportOptions: {\n    viewportId: 'viewportC',\n    toolGroupId: 'default',\n    allowUnmatchedView: true,\n  },\n  displaySets: [\n    {\n      matchedDisplaySetsIndex: 1,\n      id: 'defaultDisplaySetId',\n    },\n  ],\n};\nconst viewport0d = {\n  viewportOptions: {\n    viewportId: 'viewportD',\n    toolGroupId: 'default',\n    allowUnmatchedView: true,\n  },\n  displaySets: [\n    {\n      matchedDisplaySetsIndex: 0,\n      id: 'defaultDisplaySetId',\n    },\n  ],\n};\n\nconst viewportStructure = {\n  layoutType: 'grid',\n  properties: {\n    rows: 2,\n    columns: 2,\n  },\n};\n\nconst viewportStructure32 = {\n  layoutType: 'grid',\n  properties: {\n    rows: 2,\n    columns: 3,\n  },\n};\n\n/**\n * This hanging protocol is a test hanging protocol used to apply various\n * layouts in different positions for display, re-using earlier names in\n * various orders.\n */\nconst hpTestSwitch: Types.HangingProtocol.Protocol = {\n  hasUpdatedPriorsInformation: false,\n  id: '@ohif/mnTestSwitch',\n  description: 'Has various hanging protocol grid layouts',\n  name: 'Test Switch',\n  protocolMatchingRules: [\n    {\n      id: 'OneOrMoreSeries',\n      weight: 25,\n      attribute: 'numberOfDisplaySetsWithImages',\n      constraint: {\n        greaterThan: 0,\n      },\n    },\n  ],\n  toolGroupIds: ['default'],\n  displaySetSelectors: {\n    defaultDisplaySetId: {\n      seriesMatchingRules: [\n        {\n          attribute: 'numImageFrames',\n          constraint: {\n            greaterThan: { value: 0 },\n          },\n        },\n        // This display set will select the specified items by preference\n        // It has no affect if nothing is specified in the URL.\n        {\n          attribute: 'isDisplaySetFromUrl',\n          weight: 20,\n          constraint: {\n            equals: true,\n          },\n        },\n      ],\n    },\n  },\n  defaultViewport: {\n    viewportOptions: {\n      viewportType: 'stack',\n      toolGroupId: 'default',\n      allowUnmatchedView: true,\n    },\n    displaySets: [\n      {\n        id: 'defaultDisplaySetId',\n        matchedDisplaySetsIndex: -1,\n      },\n    ],\n  },\n  stages: [\n    {\n      name: '2x2 0a1b2c3d',\n      viewportStructure,\n      viewports: [viewport0a, viewport1b, viewport2c, viewport3d],\n    },\n    {\n      name: '3x2 0a1b4e2c3d5f',\n      viewportStructure: viewportStructure32,\n      // Note the following structure simply preserves the viewportId for\n      // a given screen position\n      viewports: [viewport0a, viewport1b, viewport4e, viewport2c, viewport3d, viewport5f],\n    },\n    {\n      name: '2x2 1c0d3a2b',\n      viewportStructure,\n      viewports: [viewport1c, viewport0d, viewport3a, viewport2b],\n    },\n    {\n      name: '2x2 3a2b1c0d',\n      viewportStructure,\n      viewports: [viewport3a, viewport2b, viewport1c, viewport0d],\n    },\n  ],\n  numberOfPriorsReferenced: -1,\n};\n\nexport default hpTestSwitch;\n","/**\n * Coding values is a map of simple string coding values to a set of\n * attributes associated with the coding value.\n *\n * The simple string is in the format `<codingSchemeDesignator>:<codingValue>`\n * That allows extracting the DICOM attributes from the designator/value, and\n * allows for passing around the simple string.\n * The additional attributes contained in the object include:\n *       * text - this is the coding scheme text display value, and may be language specific\n *       * type - this defines a named type, typically 'site'.  Different names can be used\n *                to allow setting different findingSites values in order to define a hierarchy.\n *       * color - used to apply annotation color\n * It is also possible to define additional attributes here, used by custom\n * extensions.\n *\n * See https://dicom.nema.org/medical/dicom/current/output/html/part16.html\n * for definitions of SCT and other code values.\n */\nexport default {\n  codingValues: {\n    // Sites\n    'SCT:69536005': {\n      text: 'Head',\n      type: 'site',\n      style: {\n        color: 'red',\n      },\n    },\n    'SCT:45048000': {\n      text: 'Neck',\n      type: 'site',\n      style: {\n        color: 'blue',\n      },\n    },\n    'SCT:818981001': {\n      text: 'Abdomen',\n      type: 'site',\n      style: {\n        color: 'orange',\n      },\n    },\n    'SCT:816092008': {\n      text: 'Pelvis',\n      type: 'site',\n      style: {\n        color: 'cyan',\n      },\n    },\n\n    // Findings\n    'SCT:371861004': {\n      text: 'Mild intimal coronary irregularities',\n      style: {\n        color: 'green',\n      },\n    },\n    'SCT:194983005': {\n      text: 'Aortic insufficiency',\n      style: {\n        color: 'darkred',\n      },\n    },\n    'SCT:399232001': {\n      text: '2-chamber',\n    },\n    'SCT:103340004': {\n      text: 'SAX',\n    },\n    'SCT:91134007': {\n      text: 'MV',\n    },\n    'SCT:122972007': {\n      text: 'PV',\n    },\n\n    // Orientations\n    'SCT:24422004': {\n      text: 'Axial',\n      color: '#000000',\n      type: 'orientation',\n    },\n    'SCT:81654009': {\n      text: 'Coronal',\n      color: '#000000',\n      type: 'orientation',\n    },\n    'SCT:30730003': {\n      text: 'Sagittal',\n      color: '#000000',\n      type: 'orientation',\n    },\n  },\n};\n","export default {\n  '@ohif/contextMenuAnnotationCode': {\n    /** Applies the code value setup for this item */\n    $transform: function (customizationService) {\n      const { code: codeRef } = this;\n      if (!codeRef) {\n        throw new Error(`item ${this} has no code ref`);\n      }\n      const codingValues = customizationService.getCustomization('codingValues');\n      const code = codingValues[codeRef];\n      return {\n        ...this,\n        codeRef,\n        code: { ref: codeRef, ...code },\n        label: this.label || code.text || codeRef,\n        commands: [\n          {\n            commandName: 'updateMeasurement',\n          },\n        ],\n      };\n    },\n  },\n};\n","export default {\n  measurementsContextMenu: {\n    $set: {\n      inheritsFrom: 'ohif.contextMenu',\n      menus: [\n        {\n          // selector restricts context menu to when there is nearbyToolData\n          selector: ({ nearbyToolData }) => !!nearbyToolData,\n          items: [\n            {\n              label: 'Site',\n              actionType: 'ShowSubMenu',\n              subMenu: 'siteSelectionSubMenu',\n            },\n            {\n              label: 'Finding',\n              actionType: 'ShowSubMenu',\n              subMenu: 'findingSelectionSubMenu',\n            },\n            {\n              // inheritsFrom is implicit here in the configuration setup\n              label: 'Delete Measurement',\n              commands: [\n                {\n                  commandName: 'removeMeasurement',\n                },\n              ],\n            },\n            {\n              label: 'Add Label',\n              commands: [\n                {\n                  commandName: 'setMeasurementLabel',\n                },\n              ],\n            },\n\n            // The example below shows how to include a delegating sub-menu,\n            // Only available on the @ohif/mnGrid hanging protocol\n            // To demonstrate, select the 3x1 layout from the protocol menu\n            // and right click on a measurement.\n            {\n              label: 'IncludeSubMenu',\n              selector: ({ protocol }) => protocol?.id === '@ohif/mnGrid',\n              delegating: true,\n              subMenu: 'orientationSelectionSubMenu',\n            },\n          ],\n        },\n\n        {\n          id: 'orientationSelectionSubMenu',\n          selector: ({ nearbyToolData }) => !!nearbyToolData,\n          items: [\n            {\n              inheritsFrom: '@ohif/contextMenuAnnotationCode',\n              code: 'SCT:24422004',\n            },\n            {\n              inheritsFrom: '@ohif/contextMenuAnnotationCode',\n              code: 'SCT:81654009',\n            },\n          ],\n        },\n\n        {\n          id: 'findingSelectionSubMenu',\n          selector: ({ nearbyToolData }) => !!nearbyToolData,\n          items: [\n            {\n              inheritsFrom: '@ohif/contextMenuAnnotationCode',\n              code: 'SCT:371861004',\n            },\n            {\n              inheritsFrom: '@ohif/contextMenuAnnotationCode',\n              code: 'SCT:194983005',\n            },\n          ],\n        },\n\n        {\n          id: 'siteSelectionSubMenu',\n          selector: ({ nearbyToolData }) => !!nearbyToolData,\n          items: [\n            {\n              inheritsFrom: '@ohif/contextMenuAnnotationCode',\n              code: 'SCT:69536005',\n            },\n            {\n              inheritsFrom: '@ohif/contextMenuAnnotationCode',\n              code: 'SCT:45048000',\n            },\n          ],\n        },\n      ],\n    },\n  },\n};\n","/**\n * This function extracts an attribute from the already matched display sets, and\n * compares it to the attribute in the current display set, and indicates if they match.\n * From 'this', it uses:\n *    `sameAttribute` as the attribute name to look for\n *    `sameDisplaySetId` as the display set id to look for\n * From `options`, it looks for\n */\nexport default function (displaySet, options) {\n  const { sameAttribute, sameDisplaySetId } = this;\n  if (!sameAttribute) {\n    console.log('sameAttribute not defined in', this);\n    return `sameAttribute not defined in ${this.id}`;\n  }\n  if (!sameDisplaySetId) {\n    console.log('sameDisplaySetId not defined in', this);\n    return `sameDisplaySetId not defined in ${this.id}`;\n  }\n  const { displaySetMatchDetails, displaySets } = options;\n  const match = displaySetMatchDetails.get(sameDisplaySetId);\n  if (!match) {\n    console.log('No match for display set', sameDisplaySetId);\n    return false;\n  }\n  const { displaySetInstanceUID } = match;\n  const altDisplaySet = displaySets.find(it => it.displaySetInstanceUID == displaySetInstanceUID);\n  if (!altDisplaySet) {\n    console.log('No display set found with', displaySetInstanceUID, 'in', displaySets);\n    return false;\n  }\n  const testValue = altDisplaySet[sameAttribute];\n  return testValue === displaySet[sameAttribute];\n}\n","export default (study, extraData) => extraData?.displaySets?.length;\n","export default (study, extraData) =>\n  Math.max(...(extraData?.displaySets?.map?.(ds => ds.numImageFrames ?? 0) || [0]));\n","import { Types } from '@ohif/core';\n\nimport { id } from './id';\n\nimport hpTestSwitch from './hpTestSwitch';\n\nimport getCustomizationModule from './getCustomizationModule';\nimport sameAs from './custom-attribute/sameAs';\nimport numberOfDisplaySets from './custom-attribute/numberOfDisplaySets';\nimport maxNumImageFrames from './custom-attribute/maxNumImageFrames';\nimport getPanelModule from './getPanelModule';\n\n/**\n * The test extension provides additional behavior for testing various\n * customizations and settings for OHIF.\n */\nconst testExtension: Types.Extensions.Extension = {\n  /**\n   * Only required property. Should be a unique value across all extensions.\n   */\n  id,\n\n  /**\n   * Register additional behavior:\n   *   * HP custom attribute seriesDescriptions to retrieve an array of all series descriptions\n   *   * HP custom attribute numberOfDisplaySets to retrieve the number of display sets\n   *   * HP custom attribute numberOfDisplaySetsWithImages to retrieve the number of display sets containing images\n   *   * HP custom attribute to return a boolean true, when the attribute sameAttribute has the same\n   *     value as another series description in an already matched display set selector named with the value\n   *     in `sameDisplaySetId`\n   */\n  preRegistration: ({ servicesManager }: Types.Extensions.ExtensionParams) => {\n    const { hangingProtocolService } = servicesManager.services;\n    hangingProtocolService.addCustomAttribute(\n      'numberOfDisplaySets',\n      'Number of displays sets',\n      numberOfDisplaySets\n    );\n    hangingProtocolService.addCustomAttribute(\n      'maxNumImageFrames',\n      'Maximum of number of image frames',\n      maxNumImageFrames\n    );\n    hangingProtocolService.addCustomAttribute(\n      'sameAs',\n      'Match an attribute in an existing display set',\n      sameAs\n    );\n  },\n\n  /** Registers some customizations */\n  getCustomizationModule,\n\n  getPanelModule,\n\n  getHangingProtocolModule: () => {\n    return [\n      // Create a MxN hanging protocol available by default\n      {\n        name: hpTestSwitch.id,\n        protocol: hpTestSwitch,\n      },\n    ];\n  },\n};\n\nexport default testExtension;\n","import { codingValues, contextMenuCodeItem, findingsContextMenu } from './custom-context-menu';\n\nexport default function getCustomizationModule() {\n  return [\n    {\n      name: 'custom-context-menu',\n      value: {\n        ...codingValues,\n        ...contextMenuCodeItem,\n        ...findingsContextMenu,\n      },\n    },\n    {\n      name: 'contextMenuCodeItem',\n      value: {\n        ...contextMenuCodeItem,\n      },\n    },\n  ];\n}\n","import React from 'react';\nimport {\n  PanelMeasurement,\n  SeriesMeasurements,\n  StudyMeasurements,\n} from '@ohif/extension-cornerstone';\n\nexport default function getPanelModule({\n  commandsManager,\n  servicesManager,\n  extensionManager,\n}: withAppTypes) {\n  const childProps = {\n    commandsManager,\n    servicesManager,\n    extensionManager,\n  };\n  const wrappedPanelMeasurementSeries = () => {\n    return (\n      <PanelMeasurement {...childProps}>\n        <StudyMeasurements>\n          <SeriesMeasurements />\n        </StudyMeasurements>\n      </PanelMeasurement>\n    );\n  };\n  return [\n    {\n      name: 'panelMeasurementSeries',\n      iconName: 'tool-freehand-roi',\n      iconLabel: 'Measure Series',\n      label: 'Measurement Series',\n      component: wrappedPanelMeasurementSeries,\n    },\n  ];\n}\n"],"names":["ChangeTypes","Events","SegmentationRepresentations","StrategyCallbacks","MouseBindings","KeyboardBindings","ToolModes","Swipe","AnnotationStyleStates","id","packageJson","viewport0a","viewportOptions","viewportId","toolGroupId","allowUnmatchedView","displaySets","viewport1b","matchedDisplaySetsIndex","viewport2c","viewport3d","viewport3a","viewport2b","viewport1c","viewport0d","viewportStructure","layoutType","properties","rows","columns","hasUpdatedPriorsInformation","description","name","protocolMatchingRules","weight","attribute","constraint","greaterThan","toolGroupIds","displaySetSelectors","defaultDisplaySetId","seriesMatchingRules","value","equals","defaultViewport","viewportType","stages","viewports","numberOfPriorsReferenced","codingValues","text","type","style","color","$transform","customizationService","code","codeRef","this","Error","getCustomization","ref","label","commands","commandName","measurementsContextMenu","$set","inheritsFrom","menus","selector","nearbyToolData","items","actionType","subMenu","protocol","delegating","displaySet","options","sameAttribute","sameDisplaySetId","console","log","displaySetMatchDetails","match","get","displaySetInstanceUID","altDisplaySet","find","it","study","extraData","length","Math","max","map","ds","numImageFrames","preRegistration","servicesManager","hangingProtocolService","services","addCustomAttribute","numberOfDisplaySets","maxNumImageFrames","sameAs","getCustomizationModule","contextMenuCodeItem","findingsContextMenu","getPanelModule","commandsManager","extensionManager","childProps","iconName","iconLabel","component","wrappedPanelMeasurementSeries","React","PanelMeasurement","StudyMeasurements","SeriesMeasurements","getHangingProtocolModule","hpTestSwitch"],"sourceRoot":""}