{"version":3,"file":"1807.bundle.df47323c803dbc28d3b8.js","mappings":"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","sources":["webpack:///../../../modes/tmtv/src/initToolGroups.js","webpack:///../../../modes/tmtv/src/toolbarButtons.ts","webpack:///../../../modes/tmtv/src/id.js","webpack:///../../../modes/tmtv/src/index.ts","webpack:///../../../modes/tmtv/src/utils/setCrosshairsConfiguration.js","webpack:///../../../modes/tmtv/src/utils/setFusionActiveVolume.js"],"sourcesContent":["export const toolGroupIds = {\n  CT: 'ctToolGroup',\n  PT: 'ptToolGroup',\n  Fusion: 'fusionToolGroup',\n  MIP: 'mipToolGroup',\n  default: 'default',\n};\n\nfunction _initToolGroups(toolNames, Enums, toolGroupService, commandsManager) {\n  const tools = {\n    active: [\n      {\n        toolName: toolNames.WindowLevel,\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\n      },\n      {\n        toolName: toolNames.Pan,\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\n      },\n      {\n        toolName: toolNames.Zoom,\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }, { numTouchPoints: 2 }],\n      },\n      {\n        toolName: toolNames.StackScroll,\n        bindings: [{ mouseButton: Enums.MouseBindings.Wheel }, { numTouchPoints: 3 }],\n      },\n    ],\n    passive: [\n      { toolName: toolNames.Length },\n      { toolName: toolNames.SegmentBidirectional },\n      {\n        toolName: toolNames.ArrowAnnotate,\n        configuration: {\n          getTextCallback: (callback, eventDetails) => {\n            commandsManager.runCommand('arrowTextCallback', {\n              callback,\n              eventDetails,\n            });\n          },\n          changeTextCallback: (data, eventDetails, callback) => {\n            commandsManager.runCommand('arrowTextCallback', {\n              callback,\n              data,\n              eventDetails,\n            });\n          },\n        },\n      },\n      { toolName: toolNames.Bidirectional },\n      { toolName: toolNames.DragProbe },\n      { toolName: toolNames.Probe },\n      { toolName: toolNames.EllipticalROI },\n      { toolName: toolNames.RectangleROI },\n      { toolName: toolNames.StackScroll },\n      { toolName: toolNames.Angle },\n      { toolName: toolNames.CobbAngle },\n      { toolName: toolNames.Magnify },\n      {\n        toolName: 'CircularBrush',\n        parentTool: 'Brush',\n        configuration: {\n          activeStrategy: 'FILL_INSIDE_CIRCLE',\n        },\n      },\n      {\n        toolName: 'CircularEraser',\n        parentTool: 'Brush',\n        configuration: {\n          activeStrategy: 'ERASE_INSIDE_CIRCLE',\n        },\n      },\n      {\n        toolName: 'SphereBrush',\n        parentTool: 'Brush',\n        configuration: {\n          activeStrategy: 'FILL_INSIDE_SPHERE',\n        },\n      },\n      {\n        toolName: 'SphereEraser',\n        parentTool: 'Brush',\n        configuration: {\n          activeStrategy: 'ERASE_INSIDE_SPHERE',\n        },\n      },\n      {\n        toolName: 'ThresholdCircularBrush',\n        parentTool: 'Brush',\n        configuration: {\n          activeStrategy: 'THRESHOLD_INSIDE_CIRCLE',\n        },\n      },\n      {\n        toolName: 'ThresholdSphereBrush',\n        parentTool: 'Brush',\n        configuration: {\n          activeStrategy: 'THRESHOLD_INSIDE_SPHERE',\n        },\n      },\n      {\n        toolName: 'ThresholdCircularBrushDynamic',\n        parentTool: 'Brush',\n        configuration: {\n          activeStrategy: 'THRESHOLD_INSIDE_CIRCLE',\n          // preview: {\n          //   enabled: true,\n          // },\n          threshold: {\n            isDynamic: true,\n            dynamicRadius: 3,\n          },\n        },\n      },\n    ],\n    enabled: [],\n    disabled: [\n      {\n        toolName: toolNames.Crosshairs,\n        configuration: {\n          disableOnPassive: true,\n          autoPan: {\n            enabled: false,\n            panSize: 10,\n          },\n        },\n      },\n    ],\n  };\n\n  toolGroupService.createToolGroupAndAddTools(toolGroupIds.CT, tools);\n  toolGroupService.createToolGroupAndAddTools(toolGroupIds.PT, {\n    active: tools.active,\n    passive: [...tools.passive, { toolName: 'RectangleROIStartEndThreshold' }],\n    enabled: tools.enabled,\n    disabled: tools.disabled,\n  });\n  toolGroupService.createToolGroupAndAddTools(toolGroupIds.Fusion, tools);\n  toolGroupService.createToolGroupAndAddTools(toolGroupIds.default, tools);\n\n  const mipTools = {\n    active: [\n      {\n        toolName: toolNames.VolumeRotate,\n        bindings: [{ mouseButton: Enums.MouseBindings.Wheel }],\n        configuration: {\n          rotateIncrementDegrees: 5,\n        },\n      },\n      {\n        toolName: toolNames.MipJumpToClick,\n        configuration: {\n          toolGroupId: toolGroupIds.PT,\n        },\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\n      },\n    ],\n    enabled: [\n      {\n        toolName: toolNames.OrientationMarker,\n        configuration: {\n          orientationWidget: {\n            viewportCorner: 'BOTTOM_LEFT',\n          },\n        },\n      },\n    ],\n  };\n\n  toolGroupService.createToolGroupAndAddTools(toolGroupIds.MIP, mipTools);\n}\n\nfunction initToolGroups(toolNames, Enums, toolGroupService, commandsManager) {\n  _initToolGroups(toolNames, Enums, toolGroupService, commandsManager);\n}\n\nexport default initToolGroups;\n","import { toolGroupIds } from './initToolGroups';\n\nconst setToolActiveToolbar = {\n  commandName: 'setToolActiveToolbar',\n  commandOptions: {\n    toolGroupIds: [toolGroupIds.CT, toolGroupIds.PT, toolGroupIds.Fusion],\n  },\n};\n\nconst toolbarButtons = [\n  {\n    id: 'MeasurementTools',\n    uiType: 'ohif.toolButtonList',\n    props: {\n      buttonSection: true,\n    },\n  },\n  {\n    id: 'SegmentationTools',\n    uiType: 'ohif.toolBoxButton',\n    props: {\n      buttonSection: true,\n    },\n  },\n  {\n    id: 'BrushTools',\n    uiType: 'ohif.toolBoxButtonGroup',\n    props: {\n      buttonSection: true,\n    },\n  },\n  {\n    id: 'AdvancedRenderingControls',\n    uiType: 'ohif.advancedRenderingControls',\n    props: {\n      buttonSection: true,\n    },\n  },\n  {\n    id: 'modalityLoadBadge',\n    uiType: 'ohif.modalityLoadBadge',\n    props: {\n      icon: 'Status',\n      label: 'Status',\n      tooltip: 'Status',\n      evaluate: {\n        name: 'evaluate.modalityLoadBadge',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'Colorbar',\n    uiType: 'ohif.colorbar',\n    props: {\n      type: 'tool',\n      label: 'Colorbar',\n    },\n  },\n  {\n    id: 'navigationComponent',\n    uiType: 'ohif.navigationComponent',\n    props: {\n      icon: 'Navigation',\n      label: 'Navigation',\n      tooltip: 'Navigate between segments/measurements and manage their visibility',\n      evaluate: {\n        name: 'evaluate.navigationComponent',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'windowLevelMenuEmbedded',\n    uiType: 'ohif.windowLevelMenuEmbedded',\n    props: {\n      icon: 'WindowLevel',\n      label: 'Window Level',\n      tooltip: 'Adjust window/level presets and customize image contrast settings',\n      evaluate: {\n        name: 'evaluate.windowLevelMenuEmbedded',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'trackingStatus',\n    uiType: 'ohif.trackingStatus',\n    props: {\n      icon: 'TrackingStatus',\n      label: 'Tracking Status',\n      tooltip: 'View and manage tracking status of measurements and annotations',\n      evaluate: {\n        name: 'evaluate.trackingStatus',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'Length',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-length',\n      label: 'Length',\n      tooltip: 'Length Tool',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'Bidirectional',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-bidirectional',\n      label: 'Bidirectional',\n      tooltip: 'Bidirectional Tool',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'ArrowAnnotate',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-annotate',\n      label: 'Arrow Annotate',\n      tooltip: 'Arrow Annotate Tool',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'EllipticalROI',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-ellipse',\n      label: 'Ellipse',\n      tooltip: 'Ellipse Tool',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'Zoom',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-zoom',\n      label: 'Zoom',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'WindowLevel',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-window-level',\n      label: 'Window Level',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'Crosshairs',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-crosshair',\n      label: 'Crosshairs',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'Pan',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-move',\n      label: 'Pan',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'RectangleROIStartEndThreshold',\n    uiType: 'ohif.toolBoxButton',\n    props: {\n      icon: 'tool-create-threshold',\n      label: 'Rectangle ROI Threshold',\n      commands: setToolActiveToolbar,\n      evaluate: [\n        'evaluate.cornerstone.segmentation',\n        {\n          name: 'evaluate.cornerstoneTool',\n          disabledText: 'Select the PT Axial to enable this tool',\n        },\n      ],\n      options: 'tmtv.RectangleROIThresholdOptions',\n    },\n  },\n\n  {\n    id: 'Brush',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'icon-tool-brush',\n      label: 'Brush',\n      evaluate: {\n        name: 'evaluate.cornerstone.segmentation',\n        toolNames: ['CircularBrush', 'SphereBrush'],\n        disabledText: 'Create new segmentation to enable this tool.',\n      },\n      options: [\n        {\n          name: 'Radius (mm)',\n          id: 'brush-radius',\n          type: 'range',\n          min: 0.5,\n          max: 99.5,\n          step: 0.5,\n          value: 25,\n          commands: {\n            commandName: 'setBrushSize',\n            commandOptions: { toolNames: ['CircularBrush', 'SphereBrush'] },\n          },\n        },\n        {\n          name: 'Shape',\n          type: 'radio',\n          id: 'brush-mode',\n          value: 'CircularBrush',\n          values: [\n            { value: 'CircularBrush', label: 'Circle' },\n            { value: 'SphereBrush', label: 'Sphere' },\n          ],\n          commands: 'setToolActiveToolbar',\n        },\n      ],\n    },\n  },\n  {\n    id: 'Eraser',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'icon-tool-eraser',\n      label: 'Eraser',\n      evaluate: {\n        name: 'evaluate.cornerstone.segmentation',\n        toolNames: ['CircularEraser', 'SphereEraser'],\n      },\n      options: [\n        {\n          name: 'Radius (mm)',\n          id: 'eraser-radius',\n          type: 'range',\n          min: 0.5,\n          max: 99.5,\n          step: 0.5,\n          value: 25,\n          commands: {\n            commandName: 'setBrushSize',\n            commandOptions: { toolNames: ['CircularEraser', 'SphereEraser'] },\n          },\n        },\n        {\n          name: 'Shape',\n          type: 'radio',\n          id: 'eraser-mode',\n          value: 'CircularEraser',\n          values: [\n            { value: 'CircularEraser', label: 'Circle' },\n            { value: 'SphereEraser', label: 'Sphere' },\n          ],\n          commands: 'setToolActiveToolbar',\n        },\n      ],\n    },\n  },\n  {\n    id: 'Threshold',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'icon-tool-threshold',\n      label: 'Threshold Tool',\n      evaluate: {\n        name: 'evaluate.cornerstone.segmentation',\n        toolNames: ['ThresholdCircularBrush', 'ThresholdSphereBrush'],\n      },\n      options: [\n        {\n          name: 'Radius (mm)',\n          id: 'threshold-radius',\n          type: 'range',\n          min: 0.5,\n          max: 99.5,\n          step: 0.5,\n          value: 25,\n          commands: {\n            commandName: 'setBrushSize',\n            commandOptions: {\n              toolNames: [\n                'ThresholdCircularBrush',\n                'ThresholdSphereBrush',\n                'ThresholdCircularBrushDynamic',\n              ],\n            },\n          },\n        },\n        {\n          name: 'Threshold',\n          type: 'radio',\n          id: 'dynamic-mode',\n          value: 'ThresholdRange',\n          values: [\n            { value: 'ThresholdDynamic', label: 'Dynamic' },\n            { value: 'ThresholdRange', label: 'Range' },\n          ],\n          commands: ({ value, commandsManager }) => {\n            if (value === 'ThresholdDynamic') {\n              commandsManager.run('setToolActive', {\n                toolName: 'ThresholdCircularBrushDynamic',\n              });\n            } else {\n              commandsManager.run('setToolActive', {\n                toolName: 'ThresholdCircularBrush',\n              });\n            }\n          },\n        },\n        {\n          name: 'Shape',\n          type: 'radio',\n          id: 'eraser-mode',\n          value: 'ThresholdCircularBrush',\n          values: [\n            { value: 'ThresholdCircularBrush', label: 'Circle' },\n            { value: 'ThresholdSphereBrush', label: 'Sphere' },\n          ],\n          condition: ({ options }) =>\n            options.find(option => option.id === 'dynamic-mode').value === 'ThresholdRange',\n          commands: 'setToolActiveToolbar',\n        },\n        {\n          name: 'ThresholdRange',\n          type: 'double-range',\n          id: 'threshold-range',\n          min: 0,\n          max: 50,\n          step: 0.5,\n          value: [2.5, 50],\n          condition: ({ options }) =>\n            options.find(option => option.id === 'dynamic-mode').value === 'ThresholdRange',\n          commands: {\n            commandName: 'setThresholdRange',\n            commandOptions: {\n              toolNames: ['ThresholdCircularBrush', 'ThresholdSphereBrush'],\n            },\n          },\n        },\n      ],\n    },\n  },\n  {\n    id: 'dataOverlayMenu',\n    uiType: 'ohif.dataOverlayMenu',\n    props: {\n      icon: 'ViewportViews',\n      label: 'Data Overlay',\n      tooltip: 'Configure data overlay options and manage foreground/background display sets',\n      evaluate: 'evaluate.dataOverlayMenu',\n    },\n  },\n  {\n    id: 'orientationMenu',\n    uiType: 'ohif.orientationMenu',\n    props: {\n      icon: 'OrientationSwitch',\n      label: 'Orientation',\n      tooltip: 'Change viewport orientation between axial, sagittal, coronal and reformat planes',\n      evaluate: {\n        name: 'evaluate.orientationMenu',\n        // hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'windowLevelMenu',\n    uiType: 'ohif.windowLevelMenu',\n    props: {\n      icon: 'WindowLevel',\n      label: 'Window Level',\n      tooltip: 'Adjust window/level presets and customize image contrast settings',\n      evaluate: 'evaluate.windowLevelMenu',\n    },\n  },\n  {\n    id: 'voiManualControlMenu',\n    uiType: 'ohif.voiManualControlMenu',\n    props: {\n      icon: 'WindowLevelAdvanced',\n      label: 'Advanced Window Level',\n      tooltip: 'Advanced window/level settings with manual controls and presets',\n      evaluate: 'evaluate.voiManualControlMenu',\n    },\n  },\n  {\n    id: 'thresholdMenu',\n    uiType: 'ohif.thresholdMenu',\n    props: {\n      icon: 'Threshold',\n      label: 'Threshold',\n      tooltip: 'Image threshold settings',\n      evaluate: {\n        name: 'evaluate.thresholdMenu',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'opacityMenu',\n    uiType: 'ohif.opacityMenu',\n    props: {\n      icon: 'Opacity',\n      label: 'Opacity',\n      tooltip: 'Image opacity settings',\n      evaluate: {\n        name: 'evaluate.opacityMenu',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n];\n\nexport default toolbarButtons;\n","import packageJson from '../package.json';\n\nconst id = packageJson.name;\n\nexport { id };\n","import { classes } from '@ohif/core';\nimport toolbarButtons from './toolbarButtons';\nimport { id } from './id.js';\nimport initToolGroups from './initToolGroups.js';\nimport setCrosshairsConfiguration from './utils/setCrosshairsConfiguration.js';\nimport setFusionActiveVolume from './utils/setFusionActiveVolume.js';\nimport i18n from 'i18next';\n\nconst { MetadataProvider } = classes;\n\nconst ohif = {\n  layout: '@ohif/extension-default.layoutTemplateModule.viewerLayout',\n  sopClassHandler: '@ohif/extension-default.sopClassHandlerModule.stack',\n  thumbnailList: '@ohif/extension-default.panelModule.seriesList',\n};\n\nconst cs3d = {\n  viewport: '@ohif/extension-cornerstone.viewportModule.cornerstone',\n  segPanel: '@ohif/extension-cornerstone.panelModule.panelSegmentationNoHeader',\n  measurements: '@ohif/extension-cornerstone.panelModule.measurements',\n};\n\nconst tmtv = {\n  hangingProtocol: '@ohif/extension-tmtv.hangingProtocolModule.ptCT',\n  petSUV: '@ohif/extension-tmtv.panelModule.petSUV',\n  tmtv: '@ohif/extension-tmtv.panelModule.tmtv',\n};\n\nconst extensionDependencies = {\n  // Can derive the versions at least process.env.from npm_package_version\n  '@ohif/extension-default': '^3.0.0',\n  '@ohif/extension-cornerstone': '^3.0.0',\n  '@ohif/extension-cornerstone-dicom-seg': '^3.0.0',\n  '@ohif/extension-tmtv': '^3.0.0',\n};\n\nconst unsubscriptions = [];\nfunction modeFactory({ modeConfiguration }) {\n  return {\n    // TODO: We're using this as a route segment\n    // We should not be.\n    id,\n    routeName: 'tmtv',\n    displayName: i18n.t('Modes:Total Metabolic Tumor Volume'),\n    /**\n     * Lifecycle hooks\n     */\n    onModeEnter: ({ servicesManager, extensionManager, commandsManager }: withAppTypes) => {\n      const {\n        toolbarService,\n        toolGroupService,\n        customizationService,\n        hangingProtocolService,\n        displaySetService,\n      } = servicesManager.services;\n\n      const utilityModule = extensionManager.getModuleEntry(\n        '@ohif/extension-cornerstone.utilityModule.tools'\n      );\n\n      const { toolNames, Enums } = utilityModule.exports;\n\n      // Init Default and SR ToolGroups\n      initToolGroups(toolNames, Enums, toolGroupService, commandsManager);\n\n      const { unsubscribe } = toolGroupService.subscribe(\n        toolGroupService.EVENTS.VIEWPORT_ADDED,\n        () => {\n          // For fusion toolGroup we need to add the volumeIds for the crosshairs\n          // since in the fusion viewport we don't want both PT and CT to render MIP\n          // when slabThickness is modified\n          const { displaySetMatchDetails } = hangingProtocolService.getMatchDetails();\n\n          setCrosshairsConfiguration(\n            displaySetMatchDetails,\n            toolNames,\n            toolGroupService,\n            displaySetService\n          );\n\n          setFusionActiveVolume(\n            displaySetMatchDetails,\n            toolNames,\n            toolGroupService,\n            displaySetService\n          );\n        }\n      );\n\n      unsubscriptions.push(unsubscribe);\n      toolbarService.register(toolbarButtons);\n      toolbarService.updateSection(toolbarService.sections.primary, [\n        'MeasurementTools',\n        'Zoom',\n        'Pan',\n        'WindowLevel',\n        'Crosshairs',\n      ]);\n\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.topLeft, [\n        'orientationMenu',\n        'dataOverlayMenu',\n      ]);\n\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.bottomMiddle, [\n        'AdvancedRenderingControls',\n      ]);\n\n      toolbarService.updateSection('AdvancedRenderingControls', [\n        'windowLevelMenuEmbedded',\n        'voiManualControlMenu',\n        'Colorbar',\n        'opacityMenu',\n        'thresholdMenu',\n      ]);\n\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.topRight, [\n        'modalityLoadBadge',\n        'trackingStatus',\n        'navigationComponent',\n      ]);\n\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.bottomLeft, [\n        'windowLevelMenu',\n      ]);\n\n      toolbarService.updateSection('MeasurementTools', [\n        'Length',\n        'Bidirectional',\n        'ArrowAnnotate',\n        'EllipticalROI',\n      ]);\n\n      toolbarService.updateSection('ROIThresholdToolbox', ['SegmentationTools']);\n      toolbarService.updateSection('SegmentationTools', [\n        'RectangleROIStartEndThreshold',\n        'BrushTools',\n      ]);\n\n      toolbarService.updateSection('BrushTools', ['Brush', 'Eraser', 'Threshold']);\n\n      customizationService.setCustomizations({\n        'panelSegmentation.tableMode': {\n          $set: 'expanded',\n        },\n        'panelSegmentation.onSegmentationAdd': {\n          $set: () => {\n            commandsManager.run('createNewLabelmapFromPT');\n          },\n        },\n      });\n\n      // For the hanging protocol we need to decide on the window level\n      // based on whether the SUV is corrected or not, hence we can't hard\n      // code the window level in the hanging protocol but we add a custom\n      // attribute to the hanging protocol that will be used to get the\n      // window level based on the metadata\n      hangingProtocolService.addCustomAttribute(\n        'getPTVOIRange',\n        'get PT VOI based on corrected or not',\n        props => {\n          const ptDisplaySet = props.find(imageSet => imageSet.Modality === 'PT');\n\n          if (!ptDisplaySet) {\n            return;\n          }\n\n          const { imageId } = ptDisplaySet.images[0];\n          const imageIdScalingFactor = MetadataProvider.get('scalingModule', imageId);\n\n          const isSUVAvailable = imageIdScalingFactor && imageIdScalingFactor.suvbw;\n\n          if (isSUVAvailable) {\n            return {\n              windowWidth: 5,\n              windowCenter: 2.5,\n            };\n          }\n\n          return;\n        }\n      );\n    },\n    onModeExit: ({ servicesManager }: withAppTypes) => {\n      const {\n        toolGroupService,\n        syncGroupService,\n        segmentationService,\n        cornerstoneViewportService,\n        uiDialogService,\n        uiModalService,\n      } = servicesManager.services;\n\n      unsubscriptions.forEach(unsubscribe => unsubscribe());\n      uiDialogService.hideAll();\n      uiModalService.hide();\n      toolGroupService.destroy();\n      syncGroupService.destroy();\n      segmentationService.destroy();\n      cornerstoneViewportService.destroy();\n    },\n    validationTags: {\n      study: [],\n      series: [],\n    },\n    isValidMode: ({ modalities, study }) => {\n      const modalities_list = modalities.split('\\\\');\n      const invalidModalities = ['SM'];\n\n      const isValid =\n        modalities_list.includes('CT') &&\n        study.mrn !== 'M1' &&\n        modalities_list.includes('PT') &&\n        !invalidModalities.some(modality => modalities_list.includes(modality)) &&\n        // This is study is a 4D study with PT and CT and not a 3D study for the tmtv\n        // mode, until we have a better way to identify 4D studies we will use the\n        // StudyInstanceUID to identify the study\n        // Todo: when we add the 4D mode which comes with a mechanism to identify\n        // 4D studies we can use that\n        study.studyInstanceUid !== '1.3.6.1.4.1.12842.1.1.14.3.20220915.105557.468.2963630849';\n\n      // there should be both CT and PT modalities and the modality should not be SM\n      return {\n        valid: isValid,\n        description: 'The mode requires both PT and CT series in the study',\n      };\n    },\n    routes: [\n      {\n        path: 'tmtv',\n        /*init: ({ servicesManager, extensionManager }) => {\n          //defaultViewerRouteInit\n        },*/\n        layoutTemplate: () => {\n          return {\n            id: ohif.layout,\n            props: {\n              leftPanels: [ohif.thumbnailList],\n              leftPanelResizable: true,\n              leftPanelClosed: true,\n              rightPanels: [tmtv.tmtv, tmtv.petSUV],\n              rightPanelResizable: true,\n              viewports: [\n                {\n                  namespace: cs3d.viewport,\n                  displaySetsToDisplay: [ohif.sopClassHandler],\n                },\n              ],\n            },\n          };\n        },\n      },\n    ],\n    extensions: extensionDependencies,\n    hangingProtocol: tmtv.hangingProtocol,\n    sopClassHandlers: [ohif.sopClassHandler],\n    ...modeConfiguration,\n  };\n}\n\nconst mode = {\n  id,\n  modeFactory,\n  extensionDependencies,\n};\n\nexport default mode;\n","import { toolGroupIds } from '../initToolGroups';\n\nexport default function setCrosshairsConfiguration(\n  matches,\n  toolNames,\n  toolGroupService,\n  displaySetService\n) {\n  const matchDetails = matches.get('ctDisplaySet');\n\n  if (!matchDetails) {\n    return;\n  }\n\n  const { SeriesInstanceUID } = matchDetails;\n  const displaySets = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\n\n  const toolConfig = toolGroupService.getToolConfiguration(\n    toolGroupIds.Fusion,\n    toolNames.Crosshairs\n  );\n\n  const crosshairsConfig = {\n    ...toolConfig,\n    filterActorUIDsToSetSlabThickness: [displaySets[0].displaySetInstanceUID],\n  };\n\n  toolGroupService.setToolConfiguration(\n    toolGroupIds.Fusion,\n    toolNames.Crosshairs,\n    crosshairsConfig\n  );\n}\n","import { toolGroupIds } from '../initToolGroups';\n\nexport default function setFusionActiveVolume(\n  matches,\n  toolNames,\n  toolGroupService,\n  displaySetService\n) {\n  const matchDetails = matches.get('ptDisplaySet');\n  const matchDetails2 = matches.get('ctDisplaySet');\n\n  if (!matchDetails) {\n    return;\n  }\n\n  const { SeriesInstanceUID } = matchDetails;\n\n  const displaySets = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID);\n\n  if (!displaySets || displaySets.length === 0) {\n    return;\n  }\n\n  const wlToolConfig = toolGroupService.getToolConfiguration(\n    toolGroupIds.Fusion,\n    toolNames.WindowLevel\n  );\n\n  const ellipticalToolConfig = toolGroupService.getToolConfiguration(\n    toolGroupIds.Fusion,\n    toolNames.EllipticalROI\n  );\n\n  // Todo: this should not take into account the loader id\n  const volumeId = `cornerstoneStreamingImageVolume:${displaySets[0].displaySetInstanceUID}`;\n  const { SeriesInstanceUID: SeriesInstanceUID2 } = matchDetails2;\n  const ctDisplaySets = displaySetService.getDisplaySetsForSeries(SeriesInstanceUID2);\n  const ctVolumeId = `cornerstoneStreamingImageVolume:${ctDisplaySets[0].displaySetInstanceUID}`;\n\n  const windowLevelConfig = {\n    ...wlToolConfig,\n    volumeId: ctVolumeId,\n  };\n\n  const ellipticalROIConfig = {\n    ...ellipticalToolConfig,\n    volumeId,\n  };\n\n  toolGroupService.setToolConfiguration(\n    toolGroupIds.Fusion,\n    toolNames.WindowLevel,\n    windowLevelConfig\n  );\n\n  toolGroupService.setToolConfiguration(\n    toolGroupIds.Fusion,\n    toolNames.EllipticalROI,\n    ellipticalROIConfig\n  );\n}\n"],"names":["toolGroupIds","toolNames","Enums","toolGroupService","commandsManager","tools","active","toolName","WindowLevel","bindings","mouseButton","MouseBindings","Primary","Pan","Auxiliary","Zoom","Secondary","numTouchPoints","StackScroll","Wheel","passive","Length","SegmentBidirectional","ArrowAnnotate","configuration","getTextCallback","callback","eventDetails","runCommand","changeTextCallback","data","Bidirectional","DragProbe","Probe","EllipticalROI","RectangleROI","Angle","CobbAngle","Magnify","parentTool","activeStrategy","threshold","isDynamic","dynamicRadius","enabled","disabled","Crosshairs","disableOnPassive","autoPan","panSize","createToolGroupAndAddTools","mipTools","VolumeRotate","rotateIncrementDegrees","MipJumpToClick","toolGroupId","OrientationMarker","orientationWidget","viewportCorner","_initToolGroups","setToolActiveToolbar","commandName","commandOptions","id","uiType","props","buttonSection","icon","label","tooltip","evaluate","name","hideWhenDisabled","type","commands","disabledText","options","min","max","step","value","values","run","condition","find","option","packageJson","MetadataProvider","classes","ohif","cs3d","tmtv","extensionDependencies","unsubscriptions","modeFactory","modeConfiguration","routeName","displayName","i18n","t","onModeEnter","servicesManager","extensionManager","toolbarService","customizationService","hangingProtocolService","displaySetService","services","utilityModule","getModuleEntry","exports","initToolGroups","unsubscribe","subscribe","EVENTS","VIEWPORT_ADDED","displaySetMatchDetails","getMatchDetails","matches","matchDetails","get","SeriesInstanceUID","displaySets","getDisplaySetsForSeries","crosshairsConfig","getToolConfiguration","filterActorUIDsToSetSlabThickness","displaySetInstanceUID","setToolConfiguration","setCrosshairsConfiguration","matchDetails2","length","wlToolConfig","ellipticalToolConfig","volumeId","SeriesInstanceUID2","windowLevelConfig","ellipticalROIConfig","setFusionActiveVolume","push","register","toolbarButtons","updateSection","sections","primary","viewportActionMenu","topLeft","bottomMiddle","topRight","bottomLeft","setCustomizations","$set","addCustomAttribute","ptDisplaySet","imageSet","Modality","imageId","images","imageIdScalingFactor","suvbw","windowWidth","windowCenter","onModeExit","syncGroupService","segmentationService","cornerstoneViewportService","uiDialogService","uiModalService","forEach","hideAll","hide","destroy","validationTags","study","series","isValidMode","modalities","modalities_list","split","valid","includes","mrn","some","modality","studyInstanceUid","description","routes","path","layoutTemplate","leftPanels","leftPanelResizable","leftPanelClosed","rightPanels","rightPanelResizable","viewports","namespace","displaySetsToDisplay","extensions","hangingProtocol","sopClassHandlers"],"sourceRoot":""}