{"version":3,"file":"8815.bundle.921b50533911006b521f.js","mappings":"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","sources":["webpack:///../../../modes/segmentation/src/id.js","webpack:///../../../modes/segmentation/src/toolbarButtons.ts","webpack:///../../../modes/segmentation/src/initToolGroups.ts","webpack:///../../../modes/segmentation/src/index.tsx"],"sourcesContent":["import packageJson from '../package.json';\n\nconst id = packageJson.name;\n\nexport { id };\n","import type { Button } from '@ohif/core/types';\nimport { ViewportGridService } from '@ohif/core';\n\nconst setToolActiveToolbar = {\n  commandName: 'setToolActiveToolbar',\n  commandOptions: {\n    toolGroupIds: ['default', 'mpr', 'SRToolGroup', 'volume3d'],\n  },\n};\n\nconst callbacks = (toolName: string) => [\n  {\n    commandName: 'setViewportForToolConfiguration',\n    commandOptions: {\n      toolName,\n    },\n  },\n];\n\nconst toolbarButtons: Button[] = [\n  {\n    id: 'AdvancedRenderingControls',\n    uiType: 'ohif.advancedRenderingControls',\n    props: {\n      buttonSection: true,\n    },\n  },\n  {\n    id: 'modalityLoadBadge',\n    uiType: 'ohif.modalityLoadBadge',\n    props: {\n      icon: 'Status',\n      label: 'Status',\n      tooltip: 'Status',\n      evaluate: {\n        name: 'evaluate.modalityLoadBadge',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'navigationComponent',\n    uiType: 'ohif.navigationComponent',\n    props: {\n      icon: 'Navigation',\n      label: 'Navigation',\n      tooltip: 'Navigate between segments/measurements and manage their visibility',\n      evaluate: {\n        name: 'evaluate.navigationComponent',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'trackingStatus',\n    uiType: 'ohif.trackingStatus',\n    props: {\n      icon: 'TrackingStatus',\n      label: 'Tracking Status',\n      tooltip: 'View and manage tracking status of measurements and annotations',\n      evaluate: {\n        name: 'evaluate.trackingStatus',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'dataOverlayMenu',\n    uiType: 'ohif.dataOverlayMenu',\n    props: {\n      icon: 'ViewportViews',\n      label: 'Data Overlay',\n      tooltip: 'Configure data overlay options and manage foreground/background display sets',\n      evaluate: 'evaluate.dataOverlayMenu',\n    },\n  },\n  {\n    id: 'orientationMenu',\n    uiType: 'ohif.orientationMenu',\n    props: {\n      icon: 'OrientationSwitch',\n      label: 'Orientation',\n      tooltip: 'Change viewport orientation between axial, sagittal, coronal and reformat planes',\n      evaluate: {\n        name: 'evaluate.orientationMenu',\n        // hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'windowLevelMenuEmbedded',\n    uiType: 'ohif.windowLevelMenuEmbedded',\n    props: {\n      icon: 'WindowLevel',\n      label: 'Window Level',\n      tooltip: 'Adjust window/level presets and customize image contrast settings',\n      evaluate: {\n        name: 'evaluate.windowLevelMenuEmbedded',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'windowLevelMenu',\n    uiType: 'ohif.windowLevelMenu',\n    props: {\n      icon: 'WindowLevel',\n      label: 'Window Level',\n      tooltip: 'Adjust window/level presets and customize image contrast settings',\n      evaluate: 'evaluate.windowLevelMenu',\n    },\n  },\n  {\n    id: 'voiManualControlMenu',\n    uiType: 'ohif.voiManualControlMenu',\n    props: {\n      icon: 'WindowLevelAdvanced',\n      label: 'Advanced Window Level',\n      tooltip: 'Advanced window/level settings with manual controls and presets',\n      evaluate: 'evaluate.voiManualControlMenu',\n    },\n  },\n  {\n    id: 'thresholdMenu',\n    uiType: 'ohif.thresholdMenu',\n    props: {\n      icon: 'Threshold',\n      label: 'Threshold',\n      tooltip: 'Image threshold settings',\n      evaluate: {\n        name: 'evaluate.thresholdMenu',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'opacityMenu',\n    uiType: 'ohif.opacityMenu',\n    props: {\n      icon: 'Opacity',\n      label: 'Opacity',\n      tooltip: 'Image opacity settings',\n      evaluate: {\n        name: 'evaluate.opacityMenu',\n        hideWhenDisabled: true,\n      },\n    },\n  },\n  {\n    id: 'Colorbar',\n    uiType: 'ohif.colorbar',\n    props: {\n      type: 'tool',\n      label: 'Colorbar',\n    },\n  },\n  // sections\n  {\n    id: 'MoreTools',\n    uiType: 'ohif.toolButtonList',\n    props: {\n      buttonSection: true,\n    },\n  },\n  {\n    id: 'BrushTools',\n    uiType: 'ohif.toolBoxButtonGroup',\n    props: {\n      buttonSection: true,\n    },\n  },\n  // Section containers for the nested toolbox\n  {\n    id: 'SegmentationUtilities',\n    uiType: 'ohif.toolBoxButton',\n    props: {\n      buttonSection: true,\n    },\n  },\n  {\n    id: 'SegmentationTools',\n    uiType: 'ohif.toolBoxButton',\n    props: {\n      buttonSection: true,\n    },\n  },\n  // tool defs\n  {\n    id: 'Zoom',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-zoom',\n      label: 'Zoom',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'WindowLevel',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-window-level',\n      label: 'Window Level',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'Pan',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-move',\n      label: 'Pan',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'TrackballRotate',\n    uiType: 'ohif.toolButton',\n    props: {\n      type: 'tool',\n      icon: 'tool-3d-rotate',\n      label: '3D Rotate',\n      commands: setToolActiveToolbar,\n      evaluate: {\n        name: 'evaluate.cornerstoneTool',\n        disabledText: 'Select a 3D viewport to enable this tool',\n      },\n    },\n  },\n  {\n    id: 'Capture',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-capture',\n      label: 'Capture',\n      commands: 'showDownloadViewportModal',\n      evaluate: [\n        'evaluate.action',\n        {\n          name: 'evaluate.viewport.supported',\n          unsupportedViewportTypes: ['video', 'wholeSlide'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'Layout',\n    uiType: 'ohif.layoutSelector',\n    props: {\n      rows: 3,\n      columns: 4,\n      evaluate: 'evaluate.action',\n      commands: 'setViewportGridLayout',\n    },\n  },\n  {\n    id: 'Crosshairs',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-crosshair',\n      label: 'Crosshairs',\n      commands: {\n        commandName: 'setToolActiveToolbar',\n        commandOptions: {\n          toolGroupIds: ['mpr'],\n        },\n      },\n      evaluate: {\n        name: 'evaluate.cornerstoneTool',\n        disabledText: 'Select an MPR viewport to enable this tool',\n      },\n    },\n  },\n  {\n    id: 'Reset',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-reset',\n      label: 'Reset View',\n      tooltip: 'Reset View',\n      commands: 'resetViewport',\n      evaluate: 'evaluate.action',\n    },\n  },\n  {\n    id: 'rotate-right',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-rotate-right',\n      label: 'Rotate Right',\n      tooltip: 'Rotate +90',\n      commands: 'rotateViewportCW',\n      evaluate: 'evaluate.action',\n    },\n  },\n  {\n    id: 'flipHorizontal',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-flip-horizontal',\n      label: 'Flip Horizontal',\n      tooltip: 'Flip Horizontally',\n      commands: 'flipViewportHorizontal',\n      evaluate: [\n        'evaluate.viewportProperties.toggle',\n        {\n          name: 'evaluate.viewport.supported',\n          unsupportedViewportTypes: ['volume3d'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'ReferenceLines',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-referenceLines',\n      label: 'Reference Lines',\n      tooltip: 'Show Reference Lines',\n      commands: 'toggleEnabledDisabledToolbar',\n      evaluate: 'evaluate.cornerstoneTool.toggle',\n    },\n  },\n  {\n    id: 'ImageOverlayViewer',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'toggle-dicom-overlay',\n      label: 'Image Overlay',\n      tooltip: 'Toggle Image Overlay',\n      commands: 'toggleEnabledDisabledToolbar',\n      evaluate: 'evaluate.cornerstoneTool.toggle',\n    },\n  },\n  {\n    id: 'StackScroll',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-stack-scroll',\n      label: 'Stack Scroll',\n      tooltip: 'Stack Scroll',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'invert',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-invert',\n      label: 'Invert',\n      tooltip: 'Invert Colors',\n      commands: 'invertViewport',\n      evaluate: 'evaluate.viewportProperties.toggle',\n    },\n  },\n  {\n    id: 'Cine',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-cine',\n      label: 'Cine',\n      tooltip: 'Cine',\n      commands: 'toggleCine',\n      evaluate: [\n        'evaluate.cine',\n        {\n          name: 'evaluate.viewport.supported',\n          unsupportedViewportTypes: ['volume3d'],\n        },\n      ],\n    },\n  },\n  {\n    id: 'Magnify',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'tool-magnify',\n      label: 'Zoom-in',\n      tooltip: 'Zoom-in',\n      commands: setToolActiveToolbar,\n      evaluate: 'evaluate.cornerstoneTool',\n    },\n  },\n  {\n    id: 'TagBrowser',\n    uiType: 'ohif.toolButton',\n    props: {\n      icon: 'dicom-tag-browser',\n      label: 'Dicom Tag Browser',\n      tooltip: 'Dicom Tag Browser',\n      commands: 'openDICOMTagViewer',\n    },\n  },\n\n  {\n    id: 'Brush',\n    uiType: 'ohif.toolBoxButton',\n    props: {\n      icon: 'icon-tool-brush',\n      label: 'Brush',\n      evaluate: {\n        name: 'evaluate.cornerstone.segmentation',\n        toolNames: ['CircularBrush', 'SphereBrush'],\n        disabledText: 'Create new segmentation to enable this tool.',\n      },\n      options: [\n        {\n          name: 'Radius (mm)',\n          id: 'brush-radius',\n          type: 'range',\n          min: 0.5,\n          max: 99.5,\n          step: 0.5,\n          value: 25,\n          commands: {\n            commandName: 'setBrushSize',\n            commandOptions: { toolNames: ['CircularBrush', 'SphereBrush'] },\n          },\n        },\n        {\n          name: 'Shape',\n          type: 'radio',\n          id: 'brush-mode',\n          value: 'CircularBrush',\n          values: [\n            { value: 'CircularBrush', label: 'Circle' },\n            { value: 'SphereBrush', label: 'Sphere' },\n          ],\n          commands: 'setToolActiveToolbar',\n        },\n      ],\n    },\n  },\n  {\n    id: 'InterpolateLabelmap',\n    uiType: 'ohif.toolBoxButton',\n    props: {\n      icon: 'icon-tool-interpolation',\n      label: 'Interpolate Labelmap',\n      tooltip:\n        'Automatically fill in missing slices between drawn segments. Use brush or threshold tools on at least two slices, then click to interpolate across slices. Works in any direction. Volume must be reconstructable.',\n      evaluate: [\n        'evaluate.cornerstone.segmentation',\n        {\n          name: 'evaluate.displaySetIsReconstructable',\n          disabledText: 'The current viewport cannot handle interpolation.',\n        },\n      ],\n      commands: 'interpolateLabelmap',\n    },\n  },\n  {\n    id: 'SegmentBidirectional',\n    uiType: 'ohif.toolBoxButton',\n    props: {\n      icon: 'icon-tool-bidirectional-segment',\n      label: 'Segment Bidirectional',\n      tooltip:\n        'Automatically detects the largest length and width across slices for the selected segment and displays a bidirectional measurement.',\n      evaluate: {\n        name: 'evaluate.cornerstone.segmentation',\n        disabledText: 'Create new segmentation to enable this tool.',\n      },\n      commands: 'runSegmentBidirectional',\n    },\n  },\n  {\n    id: 'RegionSegmentPlus',\n    uiType: 'ohif.toolBoxButton',\n    props: {\n      icon: 'icon-tool-click-segment',\n      label: 'One Click Segment',\n      tooltip:\n        'Detects segmentable regions with one click. Hover for visual feedback—click when a plus sign appears to auto-segment the lesion.',\n      evaluate: {\n        name: 'evaluate.cornerstone.segmentation',\n        toolNames: ['RegionSegmentPlus'],\n        disabledText: 'Create new segmentation to enable this tool.',\n      },\n      commands: 'setToolActiveToolbar',\n    },\n  },\n  {\n    id: 'LabelmapSlicePropagation',\n    uiType: 'ohif.toolBoxButton',\n    props: {\n      icon: 'icon-labelmap-slice-propagation',\n      label: 'Labelmap Assist',\n      tooltip:\n        'Toggle AI assistance for segmenting nearby slices. After drawing on a slice, scroll to preview predictions. Press Enter to accept or Esc to skip.',\n      evaluate: [\n        'evaluate.cornerstoneTool.toggle',\n        {\n          name: 'evaluate.cornerstone.hasSegmentation',\n        },\n      ],\n      listeners: {\n        [ViewportGridService.EVENTS.ACTIVE_VIEWPORT_ID_CHANGED]: callbacks(\n          'LabelmapSlicePropagation'\n        ),\n        [ViewportGridService.EVENTS.VIEWPORTS_READY]: callbacks('LabelmapSlicePropagation'),\n      },\n      commands: 'toggleEnabledDisabledToolbar',\n    },\n  },\n  {\n    id: 'MarkerLabelmap',\n    uiType: 'ohif.toolBoxButton',\n    props: {\n      icon: 'icon-marker-labelmap',\n      label: 'Marker Guided Labelmap',\n      tooltip:\n        'Use include/exclude markers to guide AI (SAM) segmentation. Click to place markers, Enter to accept results, Esc to reject, and N to go to the next slice while keeping markers.',\n      evaluate: [\n        {\n          name: 'evaluate.cornerstone.segmentation',\n          toolNames: ['MarkerLabelmap', 'MarkerInclude', 'MarkerExclude'],\n        },\n      ],\n      commands: 'setToolActiveToolbar',\n      listeners: {\n        [ViewportGridService.EVENTS.ACTIVE_VIEWPORT_ID_CHANGED]: callbacks('MarkerLabelmap'),\n        [ViewportGridService.EVENTS.VIEWPORTS_READY]: callbacks('MarkerLabelmap'),\n      },\n      options: [\n        {\n          name: 'Marker Mode',\n          type: 'radio',\n          id: 'marker-mode',\n          value: 'markerInclude',\n          values: [\n            { value: 'markerInclude', label: 'Include' },\n            { value: 'markerExclude', label: 'Exclude' },\n          ],\n          commands: ({ commandsManager, options }) => {\n            const markerModeOption = options.find(option => option.id === 'marker-mode');\n            if (markerModeOption.value === 'markerInclude') {\n              commandsManager.run('setToolActive', {\n                toolName: 'MarkerInclude',\n              });\n            } else {\n              commandsManager.run('setToolActive', {\n                toolName: 'MarkerExclude',\n              });\n            }\n          },\n        },\n        {\n          name: 'Clear Markers',\n          type: 'button',\n          id: 'clear-markers',\n          commands: 'clearMarkersForMarkerLabelmap',\n        },\n      ],\n    },\n  },\n  {\n    id: 'Eraser',\n    uiType: 'ohif.toolBoxButton',\n    props: {\n      icon: 'icon-tool-eraser',\n      label: 'Eraser',\n      evaluate: {\n        name: 'evaluate.cornerstone.segmentation',\n        toolNames: ['CircularEraser', 'SphereEraser'],\n      },\n      options: [\n        {\n          name: 'Radius (mm)',\n          id: 'eraser-radius',\n          type: 'range',\n          min: 0.5,\n          max: 99.5,\n          step: 0.5,\n          value: 25,\n          commands: {\n            commandName: 'setBrushSize',\n            commandOptions: { toolNames: ['CircularEraser', 'SphereEraser'] },\n          },\n        },\n        {\n          name: 'Shape',\n          type: 'radio',\n          id: 'eraser-mode',\n          value: 'CircularEraser',\n          values: [\n            { value: 'CircularEraser', label: 'Circle' },\n            { value: 'SphereEraser', label: 'Sphere' },\n          ],\n          commands: 'setToolActiveToolbar',\n        },\n      ],\n    },\n  },\n  {\n    id: 'Threshold',\n    uiType: 'ohif.toolBoxButton',\n    props: {\n      icon: 'icon-tool-threshold',\n      label: 'Threshold Tool',\n      evaluate: {\n        name: 'evaluate.cornerstone.segmentation',\n        toolNames: [\n          'ThresholdCircularBrush',\n          'ThresholdSphereBrush',\n          'ThresholdCircularBrushDynamic',\n          'ThresholdSphereBrushDynamic',\n        ],\n      },\n      options: [\n        {\n          name: 'Radius (mm)',\n          id: 'threshold-radius',\n          type: 'range',\n          min: 0.5,\n          max: 99.5,\n          step: 0.5,\n          value: 25,\n          commands: {\n            commandName: 'setBrushSize',\n            commandOptions: {\n              toolNames: [\n                'ThresholdCircularBrush',\n                'ThresholdSphereBrush',\n                'ThresholdCircularBrushDynamic',\n                'ThresholdSphereBrushDynamic',\n              ],\n            },\n          },\n        },\n        {\n          name: 'Shape',\n          type: 'radio',\n          id: 'threshold-shape',\n          value: 'ThresholdCircularBrush',\n          values: [\n            { value: 'ThresholdCircularBrush', label: 'Circle' },\n            { value: 'ThresholdSphereBrush', label: 'Sphere' },\n          ],\n          commands: ({ value, commandsManager, options }) => {\n            const optionsDynamic = options.find(option => option.id === 'dynamic-mode');\n\n            if (optionsDynamic.value === 'ThresholdDynamic') {\n              commandsManager.run('setToolActive', {\n                toolName:\n                  value === 'ThresholdCircularBrush'\n                    ? 'ThresholdCircularBrushDynamic'\n                    : 'ThresholdSphereBrushDynamic',\n              });\n            } else {\n              commandsManager.run('setToolActive', {\n                toolName: value,\n              });\n            }\n          },\n        },\n        {\n          name: 'Threshold',\n          type: 'radio',\n          id: 'dynamic-mode',\n          value: 'ThresholdDynamic',\n          values: [\n            { value: 'ThresholdDynamic', label: 'Dynamic' },\n            { value: 'ThresholdRange', label: 'Range' },\n          ],\n          commands: ({ value, commandsManager, options }) => {\n            const thresholdRangeOption = options.find(option => option.id === 'threshold-shape');\n\n            if (value === 'ThresholdDynamic') {\n              commandsManager.run('setToolActiveToolbar', {\n                toolName:\n                  thresholdRangeOption.value === 'ThresholdCircularBrush'\n                    ? 'ThresholdCircularBrushDynamic'\n                    : 'ThresholdSphereBrushDynamic',\n              });\n            } else {\n              commandsManager.run('setToolActiveToolbar', {\n                toolName: thresholdRangeOption.value,\n              });\n\n              const thresholdRangeValue = options.find(\n                option => option.id === 'threshold-range'\n              ).value;\n\n              commandsManager.run('setThresholdRange', {\n                toolNames: ['ThresholdCircularBrush', 'ThresholdSphereBrush'],\n                value: thresholdRangeValue,\n              });\n            }\n          },\n        },\n        {\n          name: 'ThresholdRange',\n          type: 'double-range',\n          id: 'threshold-range',\n          min: -1000,\n          max: 1000,\n          step: 1,\n          value: [50, 600],\n          condition: ({ options }) =>\n            options.find(option => option.id === 'dynamic-mode').value === 'ThresholdRange',\n          commands: {\n            commandName: 'setThresholdRange',\n            commandOptions: {\n              toolNames: ['ThresholdCircularBrush', 'ThresholdSphereBrush'],\n            },\n          },\n        },\n      ],\n    },\n  },\n  {\n    id: 'Shapes',\n    uiType: 'ohif.toolBoxButton',\n    props: {\n      icon: 'icon-tool-shape',\n      label: 'Shapes',\n      evaluate: {\n        name: 'evaluate.cornerstone.segmentation',\n        toolNames: ['CircleScissor', 'SphereScissor', 'RectangleScissor'],\n        disabledText: 'Create new segmentation to enable shapes tool.',\n      },\n      options: [\n        {\n          name: 'Shape',\n          type: 'radio',\n          value: 'CircleScissor',\n          id: 'shape-mode',\n          values: [\n            { value: 'CircleScissor', label: 'Circle' },\n            { value: 'SphereScissor', label: 'Sphere' },\n            { value: 'RectangleScissor', label: 'Rectangle' },\n          ],\n          commands: 'setToolActiveToolbar',\n        },\n      ],\n    },\n  },\n  {\n    id: 'SegmentLabelTool',\n    uiType: 'ohif.toolBoxButton',\n    props: {\n      icon: 'tool-segment-label',\n      label: 'Segment Label Display',\n      tooltip: 'Click to show or hide segment labels when hovering with your mouse.',\n      commands: { commandName: 'toggleSegmentLabel' },\n      evaluate: [\n        'evaluate.cornerstoneTool.toggle',\n        {\n          name: 'evaluate.cornerstone.hasSegmentation',\n        },\n      ],\n    },\n  },\n];\n\nexport default toolbarButtons;\n","const colours = {\n  'viewport-0': 'rgb(200, 0, 0)',\n  'viewport-1': 'rgb(200, 200, 0)',\n  'viewport-2': 'rgb(0, 200, 0)',\n};\n\nconst colorsByOrientation = {\n  axial: 'rgb(200, 0, 0)',\n  sagittal: 'rgb(200, 200, 0)',\n  coronal: 'rgb(0, 200, 0)',\n};\n\nfunction createTools({ utilityModule, commandsManager }) {\n  const { toolNames, Enums } = utilityModule.exports;\n\n  const tools = {\n    active: [\n      { toolName: toolNames.WindowLevel, bindings: [{ mouseButton: Enums.MouseBindings.Primary }] },\n      { toolName: toolNames.Pan, bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }] },\n      {\n        toolName: toolNames.Zoom,\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }, { numTouchPoints: 2 }],\n      },\n      {\n        toolName: toolNames.StackScroll,\n        bindings: [{ mouseButton: Enums.MouseBindings.Wheel }, { numTouchPoints: 3 }],\n      },\n    ],\n    passive: [\n      {\n        toolName: 'CircularBrush',\n        parentTool: 'Brush',\n        configuration: {\n          activeStrategy: 'FILL_INSIDE_CIRCLE',\n        },\n      },\n      {\n        toolName: toolNames.LabelmapSlicePropagation,\n      },\n      {\n        toolName: toolNames.MarkerLabelmap,\n      },\n      {\n        toolName: toolNames.RegionSegmentPlus,\n      },\n      {\n        toolName: 'CircularEraser',\n        parentTool: 'Brush',\n        configuration: {\n          activeStrategy: 'ERASE_INSIDE_CIRCLE',\n        },\n      },\n      {\n        toolName: 'SphereBrush',\n        parentTool: 'Brush',\n        configuration: {\n          activeStrategy: 'FILL_INSIDE_SPHERE',\n        },\n      },\n      {\n        toolName: 'SphereEraser',\n        parentTool: 'Brush',\n        configuration: {\n          activeStrategy: 'ERASE_INSIDE_SPHERE',\n        },\n      },\n      {\n        toolName: 'ThresholdCircularBrush',\n        parentTool: 'Brush',\n        configuration: {\n          activeStrategy: 'THRESHOLD_INSIDE_CIRCLE',\n        },\n      },\n      {\n        toolName: 'ThresholdSphereBrush',\n        parentTool: 'Brush',\n        configuration: {\n          activeStrategy: 'THRESHOLD_INSIDE_SPHERE',\n        },\n      },\n      {\n        toolName: 'ThresholdCircularBrushDynamic',\n        parentTool: 'Brush',\n        configuration: {\n          activeStrategy: 'THRESHOLD_INSIDE_CIRCLE',\n          threshold: {\n            isDynamic: true,\n            dynamicRadius: 3,\n          },\n        },\n      },\n      {\n        toolName: toolNames.SegmentBidirectional,\n      },\n      {\n        toolName: toolNames.SegmentSelect,\n      },\n      {\n        toolName: 'ThresholdSphereBrushDynamic',\n        parentTool: 'Brush',\n        configuration: {\n          activeStrategy: 'THRESHOLD_INSIDE_SPHERE',\n          threshold: {\n            isDynamic: true,\n            dynamicRadius: 3,\n          },\n        },\n      },\n      { toolName: toolNames.CircleScissors },\n      { toolName: toolNames.RectangleScissors },\n      { toolName: toolNames.SphereScissors },\n      { toolName: toolNames.StackScroll },\n      { toolName: toolNames.Magnify },\n      { toolName: toolNames.WindowLevelRegion },\n\n      { toolName: toolNames.UltrasoundDirectional },\n    ],\n    disabled: [{ toolName: toolNames.ReferenceLines }, { toolName: toolNames.AdvancedMagnify }],\n  };\n\n  const updatedTools = commandsManager.run('initializeSegmentLabelTool', { tools });\n\n  return updatedTools;\n}\n\nfunction initDefaultToolGroup(extensionManager, toolGroupService, commandsManager, toolGroupId) {\n  const utilityModule = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone.utilityModule.tools'\n  );\n  const tools = createTools({ commandsManager, utilityModule });\n  toolGroupService.createToolGroupAndAddTools(toolGroupId, tools);\n}\n\nfunction initMPRToolGroup(extensionManager, toolGroupService, commandsManager) {\n  const utilityModule = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone.utilityModule.tools'\n  );\n  const servicesManager = extensionManager._servicesManager;\n  const { cornerstoneViewportService } = servicesManager.services;\n  const tools = createTools({ commandsManager, utilityModule });\n  tools.disabled.push(\n    {\n      toolName: utilityModule.exports.toolNames.Crosshairs,\n      configuration: {\n        viewportIndicators: true,\n        viewportIndicatorsConfig: {\n          circleRadius: 5,\n          xOffset: 0.95,\n          yOffset: 0.05,\n        },\n        disableOnPassive: true,\n        autoPan: {\n          enabled: false,\n          panSize: 10,\n        },\n        getReferenceLineColor: viewportId => {\n          const viewportInfo = cornerstoneViewportService.getViewportInfo(viewportId);\n          const viewportOptions = viewportInfo?.viewportOptions;\n          if (viewportOptions) {\n            return (\n              colours[viewportOptions.id] ||\n              colorsByOrientation[viewportOptions.orientation] ||\n              '#0c0'\n            );\n          } else {\n            console.warn('missing viewport?', viewportId);\n            return '#0c0';\n          }\n        },\n      },\n    },\n    { toolName: utilityModule.exports.toolNames.ReferenceLines }\n  );\n  toolGroupService.createToolGroupAndAddTools('mpr', tools);\n}\n\nfunction initVolume3DToolGroup(extensionManager, toolGroupService) {\n  const utilityModule = extensionManager.getModuleEntry(\n    '@ohif/extension-cornerstone.utilityModule.tools'\n  );\n\n  const { toolNames, Enums } = utilityModule.exports;\n\n  const tools = {\n    active: [\n      {\n        toolName: toolNames.TrackballRotateTool,\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\n      },\n      {\n        toolName: toolNames.Zoom,\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }, { numTouchPoints: 2 }],\n      },\n      {\n        toolName: toolNames.Pan,\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\n      },\n    ],\n  };\n\n  toolGroupService.createToolGroupAndAddTools('volume3d', tools);\n}\n\nfunction initToolGroups(extensionManager, toolGroupService, commandsManager) {\n  initDefaultToolGroup(extensionManager, toolGroupService, commandsManager, 'default');\n  initMPRToolGroup(extensionManager, toolGroupService, commandsManager);\n  initVolume3DToolGroup(extensionManager, toolGroupService);\n}\n\nexport default initToolGroups;\n","import { id } from './id';\nimport toolbarButtons from './toolbarButtons';\nimport initToolGroups from './initToolGroups';\n\nconst ohif = {\n  layout: '@ohif/extension-default.layoutTemplateModule.viewerLayout',\n  sopClassHandler: '@ohif/extension-default.sopClassHandlerModule.stack',\n  hangingProtocol: '@ohif/extension-default.hangingProtocolModule.default',\n  leftPanel: '@ohif/extension-default.panelModule.seriesList',\n};\n\nconst cornerstone = {\n  viewport: '@ohif/extension-cornerstone.viewportModule.cornerstone',\n  panelTool: '@ohif/extension-cornerstone.panelModule.panelSegmentationWithTools',\n  measurements: '@ohif/extension-cornerstone.panelModule.panelMeasurement',\n};\n\nconst segmentation = {\n  sopClassHandler: '@ohif/extension-cornerstone-dicom-seg.sopClassHandlerModule.dicom-seg',\n  viewport: '@ohif/extension-cornerstone-dicom-seg.viewportModule.dicom-seg',\n};\n\nconst dicomRT = {\n  viewport: '@ohif/extension-cornerstone-dicom-rt.viewportModule.dicom-rt',\n  sopClassHandler: '@ohif/extension-cornerstone-dicom-rt.sopClassHandlerModule.dicom-rt',\n};\n/**\n * Just two dependencies to be able to render a viewport with panels in order\n * to make sure that the mode is working.\n */\nconst extensionDependencies = {\n  '@ohif/extension-default': '^3.0.0',\n  '@ohif/extension-cornerstone': '^3.0.0',\n  '@ohif/extension-cornerstone-dicom-seg': '^3.0.0',\n  '@ohif/extension-cornerstone-dicom-rt': '^3.0.0',\n};\n\nfunction modeFactory({ modeConfiguration }) {\n  return {\n    /**\n     * Mode ID, which should be unique among modes used by the viewer. This ID\n     * is used to identify the mode in the viewer's state.\n     */\n    id,\n    routeName: 'segmentation',\n    /**\n     * Mode name, which is displayed in the viewer's UI in the workList, for the\n     * user to select the mode.\n     */\n    displayName: 'Segmentation',\n    /**\n     * Runs when the Mode Route is mounted to the DOM. Usually used to initialize\n     * Services and other resources.\n     */\n    onModeEnter: ({ servicesManager, extensionManager, commandsManager }: withAppTypes) => {\n      const { measurementService, toolbarService, toolGroupService, customizationService } =\n        servicesManager.services;\n\n      measurementService.clearMeasurements();\n\n      // Init Default and SR ToolGroups\n      initToolGroups(extensionManager, toolGroupService, commandsManager);\n\n      toolbarService.register(toolbarButtons);\n\n      toolbarService.updateSection(toolbarService.sections.primary, [\n        'WindowLevel',\n        'Pan',\n        'Zoom',\n        'TrackballRotate',\n        'Capture',\n        'Layout',\n        'Crosshairs',\n        'MoreTools',\n      ]);\n\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.topLeft, [\n        'orientationMenu',\n        'dataOverlayMenu',\n      ]);\n\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.bottomMiddle, [\n        'AdvancedRenderingControls',\n      ]);\n\n      toolbarService.updateSection('AdvancedRenderingControls', [\n        'windowLevelMenuEmbedded',\n        'voiManualControlMenu',\n        'Colorbar',\n        'opacityMenu',\n        'thresholdMenu',\n      ]);\n\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.topRight, [\n        'modalityLoadBadge',\n        'trackingStatus',\n        'navigationComponent',\n      ]);\n\n      toolbarService.updateSection(toolbarService.sections.viewportActionMenu.bottomLeft, [\n        'windowLevelMenu',\n      ]);\n\n      toolbarService.updateSection('MoreTools', [\n        'Reset',\n        'rotate-right',\n        'flipHorizontal',\n        'ReferenceLines',\n        'ImageOverlayViewer',\n        'StackScroll',\n        'invert',\n        'Cine',\n        'Magnify',\n        'TagBrowser',\n      ]);\n\n      toolbarService.updateSection(toolbarService.sections.segmentationToolbox, [\n        'SegmentationUtilities',\n        'SegmentationTools',\n      ]);\n      toolbarService.updateSection('SegmentationUtilities', [\n        'LabelmapSlicePropagation',\n        'InterpolateLabelmap',\n        'SegmentBidirectional',\n        'SegmentLabelTool',\n      ]);\n      toolbarService.updateSection('SegmentationTools', [\n        'BrushTools',\n        'MarkerLabelmap',\n        'RegionSegmentPlus',\n        'Shapes',\n      ]);\n      toolbarService.updateSection('BrushTools', ['Brush', 'Eraser', 'Threshold']);\n    },\n    onModeExit: ({ servicesManager }: withAppTypes) => {\n      const {\n        toolGroupService,\n        syncGroupService,\n        segmentationService,\n        cornerstoneViewportService,\n        uiDialogService,\n        uiModalService,\n      } = servicesManager.services;\n\n      uiDialogService.hideAll();\n      uiModalService.hide();\n      toolGroupService.destroy();\n      syncGroupService.destroy();\n      segmentationService.destroy();\n      cornerstoneViewportService.destroy();\n    },\n    /** */\n    validationTags: {\n      study: [],\n      series: [],\n    },\n    /**\n     * A boolean return value that indicates whether the mode is valid for the\n     * modalities of the selected studies. Currently we don't have stack viewport\n     * segmentations and we should exclude them\n     */\n    isValidMode: ({ modalities }) => {\n      // Don't show the mode if the selected studies have only one modality\n      // that is not supported by the mode\n      const modalitiesArray = modalities.split('\\\\');\n      return {\n        valid:\n          modalitiesArray.length === 1\n            ? !['SM', 'ECG', 'OT', 'DOC'].includes(modalitiesArray[0])\n            : true,\n        description:\n          'The mode does not support studies that ONLY include the following modalities: SM, OT, DOC',\n      };\n    },\n    /**\n     * Mode Routes are used to define the mode's behavior. A list of Mode Route\n     * that includes the mode's path and the layout to be used. The layout will\n     * include the components that are used in the layout. For instance, if the\n     * default layoutTemplate is used (id: '@ohif/extension-default.layoutTemplateModule.viewerLayout')\n     * it will include the leftPanels, rightPanels, and viewports. However, if\n     * you define another layoutTemplate that includes a Footer for instance,\n     * you should provide the Footer component here too. Note: We use Strings\n     * to reference the component's ID as they are registered in the internal\n     * ExtensionManager. The template for the string is:\n     * `${extensionId}.{moduleType}.${componentId}`.\n     */\n    routes: [\n      {\n        path: 'template',\n        layoutTemplate: ({ location, servicesManager }) => {\n          return {\n            id: ohif.layout,\n            props: {\n              leftPanels: [ohif.leftPanel],\n              leftPanelResizable: true,\n              rightPanels: [cornerstone.panelTool],\n              rightPanelResizable: true,\n              // leftPanelClosed: true,\n              viewports: [\n                {\n                  namespace: cornerstone.viewport,\n                  displaySetsToDisplay: [ohif.sopClassHandler],\n                },\n                {\n                  namespace: segmentation.viewport,\n                  displaySetsToDisplay: [segmentation.sopClassHandler],\n                },\n                {\n                  namespace: dicomRT.viewport,\n                  displaySetsToDisplay: [dicomRT.sopClassHandler],\n                },\n              ],\n            },\n          };\n        },\n      },\n    ],\n    /** List of extensions that are used by the mode */\n    extensions: extensionDependencies,\n    /** HangingProtocol used by the mode */\n    // Commented out to just use the most applicable registered hanging protocol\n    // The example is used for a grid layout to specify that as a preferred layout\n    hangingProtocol: ['@ohif/mnGrid'],\n    /** SopClassHandlers used by the mode */\n    sopClassHandlers: [ohif.sopClassHandler, segmentation.sopClassHandler, dicomRT.sopClassHandler],\n  };\n}\n\nconst mode = {\n  id,\n  modeFactory,\n  extensionDependencies,\n};\n\nexport default mode;\n"],"names":["id","packageJson","setToolActiveToolbar","commandName","commandOptions","toolGroupIds","callbacks","toolName","uiType","props","buttonSection","icon","label","tooltip","evaluate","name","hideWhenDisabled","type","commands","disabledText","unsupportedViewportTypes","rows","columns","toolNames","options","min","max","step","value","values","listeners","ViewportGridService","EVENTS","ACTIVE_VIEWPORT_ID_CHANGED","VIEWPORTS_READY","commandsManager","find","option","run","thresholdRangeOption","thresholdRangeValue","condition","colours","colorsByOrientation","axial","sagittal","coronal","createTools","utilityModule","Enums","exports","tools","active","WindowLevel","bindings","mouseButton","MouseBindings","Primary","Pan","Auxiliary","Zoom","Secondary","numTouchPoints","StackScroll","Wheel","passive","parentTool","configuration","activeStrategy","LabelmapSlicePropagation","MarkerLabelmap","RegionSegmentPlus","threshold","isDynamic","dynamicRadius","SegmentBidirectional","SegmentSelect","CircleScissors","RectangleScissors","SphereScissors","Magnify","WindowLevelRegion","UltrasoundDirectional","disabled","ReferenceLines","AdvancedMagnify","extensionManager","toolGroupService","toolGroupId","getModuleEntry","createToolGroupAndAddTools","initDefaultToolGroup","servicesManager","_servicesManager","cornerstoneViewportService","services","push","Crosshairs","viewportIndicators","viewportIndicatorsConfig","circleRadius","xOffset","yOffset","disableOnPassive","autoPan","enabled","panSize","getReferenceLineColor","viewportId","viewportInfo","getViewportInfo","viewportOptions","orientation","console","warn","initMPRToolGroup","TrackballRotateTool","initVolume3DToolGroup","ohif","cornerstone","segmentation","dicomRT","extensionDependencies","modeFactory","modeConfiguration","routeName","displayName","onModeEnter","measurementService","toolbarService","customizationService","clearMeasurements","initToolGroups","register","toolbarButtons","updateSection","sections","primary","viewportActionMenu","topLeft","bottomMiddle","topRight","bottomLeft","segmentationToolbox","onModeExit","syncGroupService","segmentationService","uiDialogService","uiModalService","hideAll","hide","destroy","validationTags","study","series","isValidMode","modalities","modalitiesArray","split","valid","length","includes","description","routes","path","layoutTemplate","location","leftPanels","leftPanelResizable","rightPanels","rightPanelResizable","viewports","namespace","displaySetsToDisplay","extensions","hangingProtocol","sopClassHandlers"],"sourceRoot":""}